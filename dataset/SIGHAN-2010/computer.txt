扩展USB连接
作者：GordonLunn
FutureTechnologyDevicesInternationalLimited
USB（通用串行总线）是现在支持许多通用现成的外围设备，如键盘，鼠标，打印机和存储设备等的公认作为首选的连接方案。
对于致力于工业和消费市场的设备制造商来说，USB也成为满足其连接至PC需求的一个优先的选择。
事实上，对于任何一个使用标准的PC作为控制器设备的应用，USB接口的好处是显而易见的。
虽然大批量短生命周期的通用外设可以不使用USB接口，一些有更长的生命周期的定制型应用则需要添加USB连接来解决现代PC缺乏传统的连接接口的问题。
在这些现代PC所不支持的接口中，RS-232串行接口是一个典型的例子，从软件的角度看，RS-232相比USB更容易实现且同样仍然满足多种应用需求。
但是大多数现代PC已经去掉了RS-232接口。
简单的串口通信方案的成本往往低于复杂的替代产品，如RS-232接口成本低于USB接口。
RS-232方案的基本组成部分包括一个UART和一个驱动器和一个简单的握手协议，即使在资源非常有限的微控制器中也可以很容易地实现。
而且RS–232接口的特性使其成为一个可以胜任恶劣的工作环境的强壮型短距离点对点通信解决方案。
这样的需求在许多工业控制或测量的实现中非常典型。
基于这些原因，RS-232接口依然活跃在许多应用领域。
由于现代PC缺乏对RS-232接口的支持，PC作为控制器的应用对RS-232接口的支持就显得令人失望。
而实现对RS-232接口外设支持的可选择方案似乎很少：找到一个PC其装有提供RS-232接口的PCI卡或重新把外围设备设计为支持USB接口类型。
用USB替换RS-232接口需要大量的设计工作。
这些影响不仅体现在硬件上，而且更重要的是给嵌入式软件带来非常巨大的变化。
现在还有第三个选择可以用来在现代PC上支持RS-232接口外设。
此种方式较之其他方式需要较少的工程方面工作并且保持传统设备的完整性和稳定性。
这种方式的好处是提供了一个USB和RS–232接口之间的透明转换。
FTDI公司的系列芯片即可支持这种方案，这些芯片解决了使用标准UART端口来实现嵌入式USB支持的相关复杂性问题。
该技术提供了一种支持传统RS-232接口外设的简单及低成本的解决方案。
图1显示小型PCB如何使用FTDI芯片来提供此种解决方案。
图1：传统RS-232调制解调器连接到现代PC。
现在FTDI家族的第五代芯片支持USB1.0和USB2.0协议（低速，全速和高速）。
这些设备提供了一系列的异步和同步串行接口解决方案，包括UART接口（RS-232/RS-422/RS-485）和FIFO。
除了集成在PCB级，这些芯片可用于制作PC与外设之间的USB到RS-232的接口转换连接线。
连接线内的芯片完成所有PC与外设之间的接口转换工作。
由于USB的波特率比RS–232的波特率高很多（6000：1），因此这些设备不仅需要提供兼容的USB接口，而且必须能够对数据进行缓冲，分析和重组来满足RS–232协议的规范。
这些都是基于FTDI所专有的IP实现，包括一个USB协议引擎，一个UART控制器，一个串行接口引擎及一个USB收发器。
图2所示为其中一种芯片FT232R的机构框图。
图2：FT232R架构框图。
运行在原有设备端的软件并不需要改变，但是仅就所使用的COM端口而言，运行在PC端的应用程序需要知道正在使用的是USB连接而非RS-232连接。
当一个USB到RS–232转换线连接到PC的USB端口，PC的操作系统会创建一个虚拟的COM端口。
应用程序通过这个虚拟的COM端口与USB接口进行通信，而不需要对PC上的应用程序进行任何修改。
应用程序只需要知道转接线所连接的具体的COM端口即可与之通信。
外设的软件或硬件则不需要任何修改。
图3所列的软件代码给出了一个例子来显示应用程序如何确定与之相连的COM端口，同时它还给出一些配置UART的例程代码。
图3：基于VCP驱动的应用软件参考代码
PC上很容易实现USB。
绝大多数针对台式机或笔记本电脑的操作系统，包括Linux，现在都支持USB作为其标准配置。
但是在嵌入式设备中，USB接口使用仍然由其是否很容易被嵌入式设备中的微控制器支持所决定。
这就意味着要在微控制器上如集成UART，SPI和I2C接口一样集成USB接口。
这将使得微控制器变得更复杂也因此给设备集成制造商带来成本的压力。
然而，使用FTDI的USB接口芯片，嵌入式设备只需要使用微控制器上的UART接口与USB芯片进行通信就可以实现USB接口的连接。
如前所述，繁重的USB协议由FTDI器件中所集成的专用硬件和固件来负担。
因此现在通过一个标准的COM端口发送一些简单的指令，任何使用微控制器的嵌入式设备可以轻易地支持USB。
防火墙x86架构和ASIC架构和NP架构的区别
在众多的安全产品中，防火墙产品无疑是保障网络安全的第一道防线，很多企业为了保障自身服务器或数据安全都采用了防火墙。
随着Internet的迅速普及，全球范围内的计算机网络病毒、操作系统漏洞、垃圾邮件等网络安全问题也是层出不穷，网络安全产品和解决方案越来越成为各类网络用户和厂商们的聚焦点，在众多的安全产品中，防火墙产品无疑是保障网络安全的第一道防线，很多企业为了保障自身服务器或数据安全都采用了防火墙。
随着网络应用的增加，对网络带宽提出了更高的要求。
这意味着防火墙要能够以非常高的速率处理数据，于是千兆防火墙逐步崭露头角，频频被运用在金融、电信、教育、气象等大型的行业和机构，以及对安全要求极高的大型企业用户，其市场占有份额已经超过50％；
下面就让我们来了解一下千兆防火墙的相关的产品、技术及选购方面的一些知识。
不同构架各具特色
从百兆到千兆，最初只是量变。
千兆防火墙在2000年前后就进入了我国市场。
由于百兆网络接口与千兆网络接口的成本相差不大，早期的千兆防火墙仅仅是将百兆接口替换为千兆接口而已。
这种基于X86体系结构的千兆防火墙主体仍然是软件，其性能受到很大制约，无法达到千兆的处理速度。
因此，这些防火墙只是具有千兆接入能力的防火墙，而不是真正具有千兆处理能力的防火墙因此可以说是一种“换汤不换药”的形式改变。
随后几年，随着千兆网络在企业和行业用户中的不断普及，以及用户对性能需求的不断增加，千兆防火墙也逐渐发生了质变。
这种质的变化首先是人们把目光转移到了专用集成电路（ASIC）和网络处理器（NP）上。
相对于X86架构，基于这些架构的千兆防火墙才是真正的硬件解决方案，能够实现千兆处理速度。
在这里，我们不妨将X86架构、NP和ASIC放在一起进行技术比较，看看不同技术的优缺点。
X86架构
最初的千兆防火墙是基于X86架构。
X86架构采用通用CPU和PCI总线接口，具有很高的灵活性和可扩展性，过去一直是防火墙开发的主要平台。
其产品功能主要由软件实现，可以根据用户的实际需要而做相应调整，增加或减少功能模块，产品比较灵活，功能十分丰富。
但其性能发展却受到体系结构的制约，作为通用的计算平台，x86的结构层次较多，不易优化，且往往会受到PCI总线的带宽限制。
虽然PCI总线接口理论上能达到接近2Gbps的吞吐量，但是通用CPU的处理能力有限，尽管防火墙软件部分可以尽可能地优化，很难达到千兆速率。
同时很多X86架构的防火墙是基于定制的通用操作系统，安全性很大程度上取决于通用操作系统自身的安全性，可能会存在安全漏洞。
ASIC架构
相比之下，ASIC防火墙通过专门设计的ASIC芯片逻辑进行硬件加速处理。
ASIC通过把指令或计算逻辑固化到芯片中，获得了很高的处理能力，因而明显提升了防火墙的性能。
新一代的可编程ASIC采用了更灵活的设计，能够通过软件改变应用逻辑，具有更广泛的适应能力。
但是，ASIC的缺点也同样明显，它的灵活性和扩展性不够，开发费用高，开发周期太长，一般耗时接近2年。
虽然研发成本较高，灵活性受限制、无法支持太多的功能，但其性能具有先天的优势，非常适合应用于模式简单、对吞吐量和时延指标要求较高的电信级大流量的处理。
目前，NetScreen在ASIC防火墙领域占有优势地位，而我国的首信也推出了我国基于自主技术的ASIC千兆防火墙产品。
NP架构
NP可以说是介于两者之间的技术，NP是专门为网络设备处理网络流量而设计的处理器，其体系结构和指令集对于防火墙常用的包过滤、转发等算法和操作都进行了专门的优化，可以高效地完成TCP/IP栈的常用操作，并对网络流量进行快速的并发处理。
硬件结构设计也大多采用高速的接口技术和总线规范，具有较高的I/O能力。
它可以构建一种硬件加速的完全可编程的架构，这种架构的软硬件都易于升级，软件可以支持新的标准和协议，硬件设计支持更高网络速度，从而使产品的生命周期更长。
由于防火墙处理的就是网络数据包，所以基于NP架构的防火墙与X86架构的防火墙相比，性能得到了很大的提高。
NP通过专门的指令集和配套的软件开发系统，提供强大的编程能力，因而便于开发应用，支持可扩展的服务，而且研制周期短，成本较低。
但是，相比于X86架构，由于应用开发、功能扩展受到NP的配套软件的限制，基于NP技术的防火墙的灵活性要差一些。
由于依赖软件环境，所以在性能方面NP不如ASIC。
NP开发的难度和灵活性都介于ASIC和x86构架之间，应该说，NP是X86架构和ASIC之间的一个折衷。
目前NP的主要提供商是Intel和Motorola，国内基于NP技术开发千兆防火墙的厂商最多，联想、紫光比威等都有相关产品推出。
从上面可以看出，X86架构、NP和ASIC各有优缺点。
X86架构灵活性最高，新功能、新模块扩展容易，但性能肯定满足不了千兆需要。
ASIC性能最高，千兆、万兆吞吐速率均可实现，但灵活性最低，定型后再扩展十分困难。
NP则介于两者之间，性能可满足千兆需要，同时也具有一定的灵活性。
三种架构综合比较
选购千兆防火墙需要考虑什么
在选购千兆防火墙时，用户首先需要明确自己的需求。
安全风险和网络应用决定了用户需求，每个网络的层次、作用、大小和结构各不同，致使这些网络所面临的安全风险不相同，安全需求自然也不相同。
没有重要资产的网络没有必要选择高端防火墙，高安全需求的网络不能选择低安全性的防火墙，这是很浅显的道理。
同样地，只有10M带宽接入互联网的办公机构没有必要去选择千兆防火墙。
其次，在防火墙的安全功能与性能之间做出折衷。
防火墙存在着功能与性能的矛盾，根据预定的安全策略，防火墙在协议栈的不同层次对流量进行检查，决定对流量的控制措施（允许通过或丢弃）。
检查的层次越高，防火墙消耗的资源就越多，花费的时间就越长，性能就会越低。
在应用环境时要考虑网络拓扑，用户规模，流量带宽，通信类型和环境的复杂恶劣程度等。
最后，技术支持与服务，在选择安全产品的时候，厂家或商家的技术支持与服务能力也应该是重要的考虑因素。
二、DLL的概念
DLL是建立在客户/服务器通信的概念上，包含若干函数、类或资源的库文件，函数和数据被存储在一个DLL（服务器）上并由一个或多个客户导出而使用，这些客户可以是应用程序或者是其它的DLL。
DLL库不同于静态库，在静态库情况下，函数和数据被编译进一个二进制文件（通常扩展名为X），VisualX的编译器在处理程序代码时将从静态库中恢复这些函数和数据并把他们和应用程序中的其他模块组合在一起生成可执行文件。
这个过程称为"静态链接"，此时因为应用程序所需的全部内容都是从库中复制了出来，所以静态库本身并不需要与可执行文件一起发行。
在动态库的情况下，有两个文件，一个是引入库（.LIB）文件，一个是DLL文件，引入库文件包含被DLL导出的函数的名称和位置，DLL包含实际的函数和数据，应用程序使用LIB文件链接到所需要使用的DLL文件，库中的函数和数据并不复制到可执行文件中，因此在应用程序的可执行文件中，存放的不是被调用的函数代码，而是DLL中所要调用的函数的内存地址，这样当一个或多个应用程序运行是再把程序代码和被调用的函数代码链接起来，从而节省了内存资源。
从上面的说明可以看出，DLL和.LIB文件必须随应用程序一起发行，否则应用程序将会产生错误。
微软的VisualX支持三种DLL，它们分别是Non-MFCDll（非MFC动态库）、RegularDll（常规DLL）、ExtensionDll（扩展DLL）。
Non-MFCDLL指的是不用MFC的类库结构，直接用C语言写的DLL，其导出的函数是标准的C接口，能被非MFC或MFC编写的应用程序所调用。
RegularDLL:和下述的ExtensionDlls一样，是用MFC类库编写的，它的一个明显的特点是在源文件里有一个继承CWinApp的类（注意：此类DLL虽然从CWinApp派生，但没有消息循环）,被导出的函数是C函数、X类或者X成员函数（注意不要把术语X类与MFC的微软基础X类相混淆），调用常规DLL的应用程序不必是MFC应用程序，只要是能调用类C函数的应用程序就可以，它们可以是在VisualX、Dephi、VisualBasic、BorlandC等编译环境下利用DLL开发应用程序。
常规DLL又可细分成静态链接到MFC和动态链接到MFC上的，这两种常规DLL的区别将在下面介绍。
与常规DLL相比，使用扩展DLL用于导出增强MFC基础类的函数或子类，用这种类型的动态链接库，可以用来输出一个从MFC所继承下来的类。
扩展DLL是使用MFC的动态链接版本所创建的，并且它只被用MFC类库所编写的应用程序所调用。
例如你已经创建了一个从MFC的CtoolBar类的派生类用于创建一个新的工具栏，为了导出这个类，你必须把它放到一个MFC扩展的DLL中。
扩展DLL和常规DLL不一样，它没有一个从CWinApp继承而来的类的对象，所以，开发人员必须在DLL中的DllMain函数添加初始化代码和结束代码。
三、动态链接库的创建
在VisualX开发环境下，打开File\New\Project选项，可以选择Win32Dynamic-LinkLibrary或MFCAppWizard[dll]来以不同的方式来创建Non-MFCDll、RegularDll、ExtensionDll等不同种类的动态链接库。
1．Win32Dynamic-LinkLibrary方式创建Non-MFCDLL动态链接库
每一个DLL必须有一个入口点，这就象我们用C编写的应用程序一样，必须有一个WINMAIN函数一样。
在Non-MFCDLL中DllMain是一个缺省的入口函数，你不需要编写自己的DLL入口函数，用这个缺省的入口函数就能使动态链接库被调用时得到正确的初始化。
如果应用程序的DLL需要分配额外的内存或资源时，或者说需要对每个进程或线程初始化和清除操作时，需要在相应的DLL工程的.CPP文件中对DllMain()函数按照下面的格式书写。
参数中，hMoudle是动态库被调用时所传递来的一个指向自己的句柄(实际上，它是指向_DGROUP段的一个选择符)；
ul_reason_for_call是一个说明动态库被调原因的标志，当进程或线程装入或卸载动态链接库的时候，操作系统调用入口函数，并说明动态链接库被调用的原因，它所有的可能值为：DLL_PROCESS_ATTACH:进程被调用、DLL_THREAD_ATTACH:线程被调用、DLL_PROCESS_DETACH:进程被停止、DLL_THREAD_DETACH:线程被停止；
lpReserved为保留参数。
到此为止，DLL的入口函数已经写了，剩下部分的实现也不难，你可以在DLL工程中加入你所想要输出的函数或变量了。
我们已经知道DLL是包含若干个函数的库文件，应用程序使用DLL中的函数之前，应该先导出这些函数，以便供给应用程序使用。
要导出这些函数有两种方法，一是在定义函数时使用导出关键字_declspec(dllexport)，另外一种方法是在创建DLL文件时使用模块定义文件.Def。
需要读者注意的是在使用第一种方法的时候，不能使用DEF文件。
下面通过两个例子来说明如何使用这两种方法创建DLL文件。
1）使用导出函数关键字_declspec(dllexport)创建MyDll.dll，该动态链接库中有两个函数，分别用来实现得到两个数的最大和最小数。
在MyDll.h和MyDLL.cpp文件中分别输入如下原代码：
该动态链接库编译成功后，打开MyDll工程中的debug目录，可以看到MyDll.dll、MyDll.lib两个文件。
LIB文件中包含DLL文件名和DLL文件中的函数名等，该LIB文件只是对应该DLL文件的"映像文件"，与DLL文件中，LIB文件的长度要小的多，在进行隐式链接DLL时要用到它。
读者可能已经注意到在MyDll.h中有关键字"externC"，它可以使其他编程语言访问你编写的DLL中的函数。
2）用.def文件创建工程MyDll
为了用.def文件创建DLL，请先删除上个例子创建的工程中的MyDll.h文件，保留MyDll.cpp并在该文件头删除#includeMyDll.h语句，同时往该工程中加入一个文本文件，命名为MyDll.def，再在该文件中加入如下代码：
其中LIBRARY语句说明该def文件是属于相应DLL的，EXPORTS语句下列出要导出的函数名称。
我们可以在.def文件中的导出函数后加X，如X，X，表示要导出的函数顺序号，在进行显式链接时可以用到它。
该DLL编译成功后，打开工程中的Debug目录，同样也会看到MyDll.dll和MyDll.lib文件。
2．MFCAppWizard[dll]方式生成常规/扩展DLL
在MFCAppWizard[dll]下生成DLL文件又有三种方式，在创建DLL时，要根据实际情况选择创建DLL的方式。
一种是常规DLL静态链接到MFC，另一种是常规DLL动态链接到MFC。
两者的区别是：前者使用的是MFC的静态链接库，生成的DLL文件长度大，一般不使用这种方式，后者使用MFC的动态链接库，生成的DLL文件长度小
DLL所有输出的函数应该以如下语句开始：
AFX_MANAGE_STATE(AfxGetStaticModuleState())//此语句用来正确地切换MFC模块状态
最后一种是MFC扩展DLL，这种DLL特点是用来建立MFC的派生类，Dll只被用MFC类库所编写的应用程序所调用。
前面我们已经介绍过，ExtensionDLLs和RegularDLLs不一样，它没有一个从CWinApp继承而来的类的对象，编译器默认了一个DLL入口函数DLLMain()作为对DLL的初始化，你可以在此函数中实现初始化,代码如下：
参数hinstDll存放DLL的句柄，参数reason指明调用函数的原因，lpReserved是一个被系统所保留的参数。
对于隐式链接是一个非零值，对于显式链接值是零。
在MFC下建立DLL文件，会自动生成def文件框架，其它与建立传统的Non-MFCDLL没有什么区别，只要在相应的头文件写入关键字_declspec(dllexport)函数类型和函数名等，或在生成的def文件中EXPORTS下输入函数名就可以了。
需要注意的是在向其它开发人员分发MFC扩展DLL时，不要忘记提供描述DLL中类的头文件以及相应的.LIB文件和DLL本身，此后开发人员就能充分利用你开发的扩展DLL了。
四、动态链接库DLL的链接
应用程序使用DLL可以采用两种方式：一种是隐式链接，另一种是显式链接。
在使用DLL之前首先要知道DLL中函数的结构信息。
VisualX6.0在VC\bin目录下提供了一个名为Dumpbin.exe的小程序，用它可以查看DLL文件中的函数结构。
另外，Windows系统将遵循下面的搜索顺序来定位DLL：1．包含EXE文件的目录，2．进程的当前工作目录，3．Windows系统目录，4．Windows目录，5．列在Path环境变量中的一系列目录。
1．隐式链接
隐式链接就是在程序开始执行时就将DLL文件加载到应用程序当中。
实现隐式链接很容易，只要将导入函数关键字_declspec(dllimport)函数名等写到应用程序相应的头文件中就可以了。
下面的例子通过隐式链接调用MyDll.dll库中的Min函数。
首先生成一个项目为TestDll，在DllTest.h、DllTest.cpp文件中分别输入如下代码：
在创建DllTest.exe文件之前，要先将MyDll.dll和MyDll.lib拷贝到当前工程所在的目录下面，也可以拷贝到windows的System目录下。
如果DLL使用的是def文件，要删除TestDll.h文件中关键字extern"C"。
TestDll.h文件中的关键字Progamcommit是要VisualX的编译器在link时，链接到MyDll.lib文件，当然，开发人员也可以不使用#pragmacomment(lib，"MyDll.lib")语句，而直接在工程的X页的Object/Moduls栏填入MyDll.lib即可。
2．显式链接
显式链接是应用程序在执行过程中随时可以加载DLL文件，也可以随时卸载DLL文件，这是隐式链接所无法做到的，所以显式链接具有更好的灵活性，对于解释性语言更为合适。
不过实现显式链接要麻烦一些。
在应用程序中用LoadLibrary或MFC提供的AfxLoadLibrary显式的将自己所做的动态链接库调进来，动态链接库的文件名即是上述两个函数的参数，此后再用GetProcAddress()获取想要引入的函数。
自此，你就可以象使用如同在应用程序自定义的函数一样来调用此引入函数了。
在应用程序退出之前，应该用FreeLibrary或MFC提供的AfxFreeLibrary释放动态链接库。
下面是通过显式链接调用DLL中的Max函数的例子。
在上例中使用类型定义关键字typedef，定义指向和DLL中相同的函数原型指针，然后通过LoadLibray()将DLL加载到当前的应用程序中并返回当前DLL文件的句柄，然后通过GetProcAddress()函数获取导入到应用程序中的函数指针，函数调用完毕后，使用FreeLibrary()卸载DLL文件。
在编译程序之前，首先要将DLL文件拷贝到工程所在的目录或Windows系统目录下。
使用显式链接应用程序编译时不需要使用相应的Lib文件。
另外，使用GetProcAddress()函数时，可以利用MAKEINTRESOURCE()函数直接使用DLL中函数出现的顺序号，如将GetProcAddress(hDLL,"Min")改为GetProcAddress(hDLL,MAKEINTRESOURCE(2))（函数Min()在DLL中的顺序号是2），这样调用DLL中的函数速度很快，但是要记住函数的使用序号，否则会发生错误。
PC之父C.Thacker荣获2009年图灵奖
根据ACM官方网站3月9日发布的消息，2009年图灵奖授予了现代PC之父CharlesThacker，以表彰他对第一台现代个人计算机XeroxPARCAlto的先驱性设计与实现，还有在局域网（包括以太网）、多处理器工作站、窥探高速缓存一致性协议和平板PC等方面的重大发明和贡献。
ACM主席DameWendyHall说，CharlesThacker是计算机系统领域最杰出的工程师之一。
他的一个又一个成就对现代计算机技术产生了深远影响。
而Intel公司的研究中心副总裁AndrewChien则表示，CharlesThacker的Alto设计已经具备了今天个人电脑的各种关键要素，为PC这个世界最具创造性而且惠及全球的产业奠定了基础。
Thacker的获奖使计算机体系架构方面的获奖次数增加到6次（不含主要贡献是操作系统的Brooks）。
从获奖学科领域来看，编程技术和理论计算机科学还是大户，分别有12次和11次折桂。
参见下面的分布图。
图灵奖是计算机界最高技术荣誉，有计算机诺贝尔奖之称。
以计算机科学之父图灵的名字命名，由ACM组织评选，授予对计算机领域有重大和持久性的技术贡献的个人。
第一位获奖者是程序设计语言和编译器方面的大师AlanPerlis。
第一位女性获奖者是2006年的FrancesAllen。
而2002和2007年的获奖者都是三人研究小组，是获奖者最多的年份。
目前图灵奖的奖金是25万美元，由Intel和Google赞助。
CharlesP.Thacker（昵称Chuck）是计算机先驱之一。
美国工程院院士，美国艺术与科学院院士，ACM会士。
目前在微软工作，是微软全球十几位技术院士之一。
除了是一位出色的计算机系统设计师之外，他也是杰出的研发管理者。
1943年2月26日，他出生于美国加州帕萨迪纳。
1968年在加州大学伯克利分校物理系读书时，他加入了Genie项目。
这个项目不久发展为伯克利计算机公司（简称BCC），开发了BCC500分时系统。
Thacker领导了中心存储器和微处理器的设计。
但公司商业上并不成功。
1970年，他和BCC的许多其他核心技术人员一起，加盟了施乐公司PaloAlto研究中心。
在这里，Thacker先后担任MAXC时分操作系统的项目负责人，Alto个人计算系统的首席设计师等职务。
主持或者参与了Alto、以太网、激光打印机等的设计与开发。
其中，设计于1973年的Alto是今天现代个人电脑的鼻祖，配有鼠标、图形化用户界面，支持局域网联网，更令人吃惊的是，它还有丰富的软件：邮件客户端、所见即所得文字编辑器、向量图形编辑器、位图编辑器、所见即所得的集成电路CAD系统、Smalltalk开发环境、Lisp开发环境Interlisp，甚至还有网络多人游戏AltoTrek和3D多人网络射击游戏MazeWar！
与它相比，数年后才问世的苹果电脑完全相形见绌。
MazeWar游戏界面
关于Alto，还有一个开发人员可能感兴趣的轶事：由于它的键盘没有下划线，所以程序员发明了CamelCase方式，用大小写变化来表示复合词。
当然，这只是说法之一。
1983年，Thacker来到DEC公司，参与创建了著名的SRC（系统研究中心）。
在这里他主持设计了第一个多处理器工作站DECFirefly和第一个Alpha架构多处理器，窥探高速缓存一致性协议（也称Firefly协议）是附带成果。
1997年，他加入微软，帮助创建了微软在英国剑桥的研究院。
两年后，他返回美国，领导了微软TabletPC原型的开发。
现在，他又回到微软研究院，从事计算机体系架构方面的研究。
2004年被美国工程院授予CharlesStarkDraper奖。
2007年荣获IEEE的冯诺依曼奖。
CharlesThacker在技术方面是一位硬派人士，主要成就都是计算机硬件系统架构和网络方面取得的。
从他的生平中我发现一点非常有意思，那就是他主持或者参与设计的产品基本上没有在商业上取得很大成功的，只有他起的作用不算特别突出的激光打印机算是例外。
可不是吗，最初的BCC、施乐的Alto、DEC的Firefly甚至微软的TabletPC，通通没有成为叫座、大把挣钱的产品。
图灵奖看重的是技术的创新，而非商业上的成功，由此可见一斑。
然而，即使以现在的眼光来看将近40年前设计的Alto，也不由得不心生敬意。
的确，今天我们桌面电脑有的东西，几乎都能在这台机器上找到原型。
CharlesThacker是清醒的。
在2006年的一次访谈中，他谈到，虽然Alto功能很多很酷，但是短板也不少。
他提到了十年后诞生的AppleII，赞赏它的极简主义设计和低廉的成本。
而Alto的成本是大问题，1973年它的价格是1万2千美元，相当于今天的10万美元。
这直接阻碍了它进入大众的桌面。
而且Alto太超前于时代了，而IBMPC和Apple电脑则正好在微处理器足够强大的时候开始进入市场。
他也提到，有意思的是，当乔布斯等人决定AppleII的处理器选用6502的时候，他们在施乐却不认为6502是电脑的CPU，只是将它用作Alto后续产品的键盘控制器......
此外，为自己开发这一出发点也对产品大众化产生了不良影响。
比如，虽然电子表格设想也提出来了，但是因为开发人员觉得这没什么用，因此没有动手去开发，而这种软件成了早期其他PC机大卖的主要原因之一。
当然，从更长的时段来看，商业上的成功也许还不如技术上真正创新更有意义。
CharlesThacker在谈到自己的成就时说，虽然Alto最有名，但是今天更重要的也许是他在DEC设计的Firefly系统，其中的许多经验有助于即将到来的多核世界。
谈到成功经验，Thacker总结了两点：干中学，多学习别人的经验。
他提到现在很多人因为算法的基础不好，而去重新自制一套，结果还不如已有的优质安全，最后对最终用户造成伤害。
看来，历史应该成为我们宝贵的资源库。
多处理器系统下的伪共享（falsesharing）问题
1.背景介绍
首先简单说一下计算机中处理器-内存体系结构。
由于CPU速度远大于内存访问速度，现代CPU设计中都引入了缓存（cache）作为CPU和内存两者之间交流的缓冲中介。
缓存的速度也介于两者之间。
缓存中存放了最经常被访问的内存数据，CPU在很大程度上只需要访问高速缓存，大大提高了系统性能。
系统对缓存进行读写的单位被称作缓存行（cacheline）。
大家知道系统对内存的操作单位一般是word，如果对缓存操作也用word作单位，就显得太小，缺乏效率，因此一般cacheline大概是8个word，这是缓存与内存沟通的最小单位。
在可以预见的几年内，计算机系统会逐渐向多核心CPU或者多CPU结构过渡，出现多个处理核心共享内存的局面。
一个很自然的问题马上出现，那就是多个处理核心对单一内存资源的访问冲突。
这个冲突本来不难解决，只要给内存访问加锁就可以了。
但是，当把缓存纳入考虑范围时，情况就复杂了。
缓存是集成在每个CPU内部的小内存，除了这个CPU，其他CPU不能访问。
而按照单CPU系统的简单缓存设计，缓存并不能察觉除本CPU以外的外部因素对内存内容的修改。
因此，假设出现下面的情况：处理器A将内存中某块内容C读入自己的缓存，并在缓存中修改了该内容，然后处理器B也将内存中这块内容C读入自己的缓存，那么，B看到的只是原始版本的内容，而看不到存在于A缓存中的更新的内容，这就产生了内容不一致的问题。
多处理器系统一般是设计控制协议来协调各个CPU缓存读写，保证内容一致，以解决这种冲突。
2.伪共享
顾名思义，“伪共享”就是“其实不是共享”。
那什么是“共享”？
多CPU同时访问同一块内存区域就是“共享”，就会产生冲突，需要控制协议来协调访问。
会引起“共享”的最小内存区域大小就是一个cacheline。
因此，当两个以上CPU都要访问同一个cacheline大小的内存区域时，就会引起冲突，这种情况就叫“共享”。
但是，这种情况里面又包含了“其实不是共享”的“伪共享”情况。
比如，两个处理器各要访问一个word，这两个word却存在于同一个cacheline大小的区域里，这时，从应用逻辑层面说，这两个处理器并没有共享内存，因为他们访问的是不同的内容（不同的word）。
但是因为cacheline的存在和限制，这两个CPU要访问这两个不同的word时，却一定要访问同一个cacheline块，产生了事实上的“共享”。
显然，由于cacheline大小限制带来的这种“伪共享”是我们不想要的，会浪费系统资源。
举例来说，当多进程程序操作同一个int型数组intX时，如果进程0只访问X，进程1只访问aX，进程2只访问X，...那么，实际上每个进程不应该发生数据共享。
但是，一般cacheline可以包含几个int，因此访问同一个cacheline内int数组元素的几个进程就需要系统花费额外资源和时间运用控制协议来协调，这是不必要的。
在这种情况下，把每个数组元素单独放在一个cacheline大小的内存区域里在时间上是最有效率的，然而空间上就变成最没效率的了。
计算机设计就是处理矛盾的艺术
Corei7/i5vPro平台新特性–Intel@AMTKVM
酝酿已久的XAMTKVM特性终于在最近发布的最新XCorei7vPro和Corei5vPro平台上发布了，新的vPro平台除了CPU采用Intel最新的Corei7和Corei5，也要求采用Intel最新的支持XAMT6的芯片组。
新平台的信息可以参考Intel官方网站：X，下面截图来自此页面。
KVM是Keyboard、VideoandMouse的缩写，KVM设备目前已经被广泛应用。
一般的应用模式是：通过KVM设备，同一套键盘、鼠标和显示器可以同时操作多台计算机，能操作的计算机台数取决于使用的KVM设备支持的端口数，一般有4口、8口、16口、24口；
但普通的KVM设备比较遗憾的一点是无法通过网络传输，这就限制了键盘、鼠标和显示器与被操作的设备距离不能太远。
市场上也有支持跨网络的KVM连接的设备，这样的设置支持KVMOverIP的特性，功能比普通的KVM设备要复杂，可以直接连接到局域网，然后控制台可以通过IP访问KVM设备，然后打开相应的设备就能远程操作。
笔者实验室就有一台AvocentAutoView3200就支持KVMOverIP，可以通过网络远程直接控制多达16台计算机，不过同时只能打开两台机器的界面；
另外有一点不是很好的是，如果客户机死机了，远程重启没办法做到，还是需要本地去重置电源；
这个设备的价格也是比较昂贵的，一般都要好几万人民币。
最新XCorei7/i5vPro平台支持的最新XAMT的KVM特性就能实现以前类似于KVMOverIP设备的功能，通过XAMTKVM，被管理终端机的键盘、鼠标和显示能够通过AMT被重定向到远程控制台；
并且结合XAMT已有的远程控制的能力，可以在客户端失去响应的情况下远程重启，真正意义上实现了远程操控和管理；
另外，结合最近的XAMT的FastCallforHelp特性，可以做到跨防火墙远程控制客户机。
XAMTKVM特性使得XAMT能够更好的支持更多的使用模式，比如：
¨客户机端蓝屏时，需要IT操作员帮忙查看蓝屏信息；
¨客户机操作系统无法响应或处于修复模式时，其他的基于操作系统的远程显示应用无法工作；
¨客户机操作系统还未正常工作，处于远程安装或修复时，随后的重启动作需要远程安装人员确认时；
¨客户机处于待机(S3)状态时，IT操作员需要远程唤醒并操作；
¨客户机平台启动时，需要在BIOS（文本显示）和操作系统（图形显示）启动过程中进行交互，IT操作员可以远程查看和控制整个启动过程。
基于XAMTKVM特性的使用模式绝对不仅仅限于上面提到的几点，只要咱们劳动人民发挥我们的聪明才智，肯定是能够更好的利用起来，以解决不同场景的问题，满足不同用户的要求。
笔者相信，XAMTKVM新特性是XAMT技术发展历史中具有重要里程碑意义的特性，有了此特性，远程操作、远程诊断和远程修复及其引申出来的需求才真正意义上得到了完美解决，也一定能吸引越来越多的IT管理人员的目光，进一步将XAMT其他特性应用起来。
关于XAMTKVM特性的更多细节和开发相关的问题，笔者将在随后的文章中进一步介绍，敬请期待………
英特尔携手Orange推出配置英特尔Atom处理器并运行MeeGo平台的移动设备，为您提供全新多媒体体验
英国斯温登和法国巴黎2010年3月3日－英特尔和Orange今天宣布达成战略性协议，通过一系列配置英特尔Atom处理器，并运行MeeGo软件平台的设备，携手推出Orange多媒体服务。
MeeGo,以Linux操作系统为基础，是Moblin和Maemo的结合体，上个月在巴塞罗那全球移动大会上公布。
它为一系列智能，类似于PC的设备和令人激动的新服务的快速发展提供了一个开放的软件环境。
为各种设备，从智能手机，到上网本，联网本等建立一个共同的软件框架，Intel和Orange将努力让消费者更容易使用这些日益增多的，采用了全新的，令人心潮澎湃的应用程序和服务的移动和驱动设备。
MeeGo以Moblin核心OS为基础，Moblin核心OS为大量的各类设备和参考用户体验提供支持。
而且，MeeGo还充分利用了Maemo在移动行业的势头，及在软件开发人员中广为应用的Qt应用程序和UI框架。
英特尔和Orange将致力于提供更多的Orange标志性服务，如在MeeGo环境下运行的OrangeTV和Orange地图。
英特尔和Orange还会共同挖掘计算和通信平台的潜力，让用户们使用各类设备和屏幕充分享受服务。
“我们的客户有75％尚未接触移动互联网。现在可供客户选择的电话和操作系统越来越多了，我们的任务就是确保让客户更加轻松地进入这个更为丰富的移动多媒体领域。”来自Orange集团SVP设备的YvesMaitre称。
“我们与英特尔基于MeeGo软件平台的合作不仅保证了提供更多的桌面和设备选择，而且客户可以继续获益于Orange标志性服务带来的用户体验，包括他们信任和认同的定制化桌面，高质量的网络和安全简化的收费系统。”
“英特尔原子处理器在市场上获得非常大的成功，”英特尔软件和服务集团副总裁兼系统软件部总经理DougFisher表示，“采用MeeGo软件平台，这些类似于PC的设备将为消费者提供大量的互联网，计算和通信体验，丰富的图形，多任务和多媒体能力，及最棒的应用性能。英特尔和Orange在数字设备和消费者体验方面的想法很接近，我们共同的努力会将人们与那些对他们来说最为重要的内容连接起来，不论他们身在何处。”
Google云计算开发平台googleappengine体会谈
体会：
1.支持两种语言，java和python。
2.我使用的是java，需要注意的是，目前只支持eclipse3.3和3.4,如果你是用的eclipse3.5则没有对应的google插件可以用，插件安装方法可以登录X查看。
3.使用起来非常简洁，你只需要按照常规的java程序设计方法来进行web程序开发，然后利用google插件来进行上传即可，上传方法参照X
需要注意的是，每个上传者必须有google账户，而且每个账户只能免费上传10个程序，程序的规模也是有限制的，而且每个上传的程序需要应用程序ID.
申请这个ID你首先要保证你要有手机，这个ID是通过SMS发送给你的，无论你是哪个国家的（强大啊）。
4.上传后，可利用X你申请的应用程序名X来访问，体验X（我最初做实验用的）。
5.无需硬件，无需配置，就是这么简单，你就可以利用google的应用服务器来开发足够强大的程序，特别是需要强大计算的程序。
6.它的数据持久化做的也很特别，查询什么的都做的很全面，操作起来比关系数据库要简单多了，基本上属于面向对象的了。
使用反病毒软件保护Windows的5个原则
微软视窗系统上的最佳病毒防护原则历久弥坚，一如既往。
对需要与其它电脑通信的微软视窗系统来说，优秀的反病毒软件是至关紧要的一个部分，特别是在这个系统连接到互联网，并且需要浏览网页、收发电子邮箱，或传送即时信息的时候。
似乎每个人都有自己喜爱的反病毒解决方案，各不相同。
然而，对于个人桌面系统，有一些经验和原则似乎在安全专家中被相当普遍地奉行着：
1、在连接到互联网之前安装反病毒软件。
一些使用微软视窗系统的电脑需要先安装反病毒软件才连接到互联网。
我曾看到恶意软件迂回侵入电脑所用的时间少于从网上下载反病毒软件并安装到电脑上的时间。
如果你没有见识过，并以此作为不必担心病毒的证据，那么在你在浏览器中打开一个提供反病毒软件的网站，下载并安装反病毒软件之前，你可以用电脑的安全作筹码玩一回俄罗斯轮盘。
2、别使用预装的反病毒软件。
Norton（诺顿）和McAfee（麦克菲），曾是家用反病毒软件中最可信的品牌，都已损害其原有声誉。
现在，大多数家用台式电脑的安全专家建议，那些预装这些品牌的反病毒软件的电脑要尽快换装其它反病毒软件。
不管你对TrendMicro（趋势科技）的企业级防病毒产品有什么看法或想法，一些新电脑预装的、源自TrendMicro（趋势科技）的免费反病毒软件从来都不如TrendMicro（趋势科技）正规产品好。
一般而言，电脑预装的“免费”反病毒软件，通常来自那些在市场营销上投入资金比其它公司更多的大牌厂商，所以这不是你所追求的最佳选择。
3、使用具有实时扫描程序的反病毒软件。
你需要一个自动、实时扫描程序来确保可以对绝大多数常见的病毒和蠕虫载体作检测，从而防止在第一次遇到病毒或蠕虫传播时被感染。
实时扫描程序可能会影响电脑的性能，可能你有时会把它关掉从而恢复电脑的性能，但对此你要十分谨慎。
不要在关掉实时扫描程序的时候浏览网页或检查电子邮件。
4、定期执行全系统扫描。
一个实时扫描程序是不够的，因为实时扫描程序只能检测病毒库中具有特征码的已知病毒，防范试图通过实时扫描程序的有效保护点的恶意程序。
因此你还需要经常做全系统扫描，并且如果条件允许的话，可以设定在夜间自动执行。
5、不要使用两个反病毒程序。
同时使用两个反病毒程序是自找麻烦。
无论是由于它们的实时扫描程序争夺访问控制权，降低电脑性能，或者其中一个反病毒程序将另外一个反病毒程序维护的病毒库特征文件误认为是感染病毒的文件，层出不穷问题会让两个桌面反病毒软件互不兼容。
我长期奉行的方法如下：
1、从已受反病毒程序保护的电脑中下载反病毒程序安装程序，刻录光盘。
2、确保使用微软视窗系统的电脑没有连接到网络。
3、卸载电脑中可能预装的的反病毒软件。
4、安装AVGFree（AVG免费版本），像我这样配置，并确保实时扫描程序是开启的。
运行一次完整系统扫描。
5、安装ClamWin，并配置它每天或每周在我们不使用电脑的时候做一次完整系统扫描。
我知道这违反了规则5：不要使用两个反病毒程序。
但是我发现，AVG免费版本和ClamWin二者很有默契，相得益彰，为现代反病毒软件中所罕见。
由于没有哪个反病毒软件是完美的，事实上有两个反病毒应用程序可以用来提供叠加保护，在防止病毒感染的战斗中有显著的优势。
当然，它们相得益彰的部分要归因于ClamWin提供的实时扫描程序不足，众所周知，ClamAV主要用来在一些Linux和基于Unix的电子邮件服务器中作病毒扫描。
如ClamWin网站所述：
请注意ClamWin免费反病毒软件不包括自动实时扫描程序。
你需要手动扫描文件来检测病毒或间谍软件。
我使用AVG的实时扫描程序，ClamWin用于定期扫描。
有时，在知道电脑将要暂时空闲并且ClamWin在此期间没有运行计划时，我也会用AVG做一个全系统扫描。
当然，其它可以在对抗病毒感染中起保护作用的因素有：一个好的防火墙；
浏览网页，检查电子邮件，或下载文件时的好习惯；
有时甚至连微软视窗系统的用户帐户控制（UserAccountControl）也有所帮助-尽管UAC可能弊大于利。
在任何情况下，不要为关于微软视窗系统的安全性正在改进的种种报道所惑，令自己为一个虚假的安全感所迷惑。
微软仍然无视病毒和蠕虫利用的漏洞，默认设置仍然没有尽其所能，微软视窗系统的基本结构离百毒不侵的地步还差得很远，因此用户的行为仍然是决定系统可能如何受到病毒感染的最重要因素之一。
反病毒软件的工作是否名符其实？
作者：MichaelKassner
翻译：PurpleEndurer，2010-01-27第1版
分类：安全
标签：软件,反病毒,恶意软件,反病毒软件,ThreatfireZero-DayMalware,保护,间谍软件,广告&恶意软件,网络威胁,病毒&蠕虫,安全
经常有人问我反病毒程序的工作是否名符其实，我通常给出肯定的答案。
最近，我开始考虑人们为什么会这么问？
我们都被告知，要在互联网上冲浪，我们的电脑需要反病毒程序来保护，如果确实如此，那么：
为什么电脑仍然被病毒感染了？
如果我们不使用反病毒程序，我们会有多少损失？
在考虑这些问题时，我意识到我可能没有掌握所有事实。
所以我开始研究反病毒方法。
我的发现如下。
一、我们面临的是什么？
请记住，坏人是有动机的。
利用恶意软件感染的电脑来赚钱比其他任何非法的努力来得更容易、更安全。
尽管如此，我想我们（受害者）也被刺激了，尤其是他们追求的是我们的钱。
那么，为什么网络犯罪分子占上风？
重要的是，他们受益于：
A.有漏洞的软件：这是不言而喻的，软件，特别是代码复杂的，会存在可以被利用的漏洞。
B.出其不意的攻击：普通用户不会寻找软件漏洞，而坏人会这么做，从而有机会在我们知道之前利用这些漏洞。
C.捉迷藏：要确定恶意软件是什么模样很困难，这令反病毒软件开发商陷入被动。
二、例子
我找不到比Google最近发生的事件更好的例子了。
攻击者利用IE浏览器中未公开（零日）漏洞侵入了Google原以为比较安全的网络。
对照我上面列出的漏洞利用三步骤：
A.有漏洞的软件：IE存在可以被利用的漏洞。
B.出其不意的攻击：这个只有攻击者知道了。
C.捉迷藏：反病毒厂商尝试开发一个检测方法，而微软则急匆匆地为IE制作补丁。
由于仍然不明白为何反病毒软件未能保护我们的电脑，我向一个经验丰富的软件工程师追询此事。
他指出，要消除未发现的东西是很难的。
这次讨论很低调。
我由此认为：检测恶意代码并没有我们想象的那么容易。
我的下一步是找出原因。
三、恶意软件的检测方法
恶意软件的检测方法可以归结为两种：基于特征码的检测方法和基于行为的检测方法。
反病毒程序可以使用其一或二者都用，取决于程序的复杂程度。
基于特征码的恶意软件检测方法已经广泛使用多年，所以我们先看这种方法。
（一）基于特征码的恶意软件检测方法
基于特征码的恶意软件检测方法取决于模式识别（patternrecognition）。
工作原理如下：反病毒程序对文件进行扫描，并与特征代码库中的抵御信息字节码相比较。
如果被扫描的文件包含的模式与库中相匹配，就会被认为是恶意软件。
反病毒程序会根据程序的配置隔离或删除该文件。
不足
目前，几乎所有反病毒程序都包含基于特征码的恶意软件检测方法。
尽管如此，反病毒公司正试图摆脱这种方法，原因如下：
基于特征码的恶意软件检测方法无法有效防御新的或未知的恶意软件。
新的恶意软件每天都在产生，从而要求特征库更新越来越频繁。
这些都是令人担忧的，也是反病毒公司投入大量的时间和精力转换到基于行为的检测方法的原因。
（二）基于行为的检测方法（Behavior-basedmalwaredetection）
基于行为的恶意软件检测方法是有道理的，因为它监视的是程序如何活动，而不是软件的构建。
也就是说，不论软件看起来是否正确，如果发现它有异常行为，该程序就会被标记。
基于行为的恶意软件检测是分成两类：基于异常的恶意软件检测方法和基于规范的恶意软件检测方法。
1、基于异常行为的恶意软件检测方法（Anomaly-basedmalwaredetection）
基于异常的恶意软件检测方法的关键组成部分是判定什么可视为正常的行为。
如此一来，任何不符合正常描绘的行为就可视为可疑的（异常）。
例如，一个程序在刚运行时没有产生任何文件，接着这个程序突然将一个文件移动到操作系统文件夹中。
这一行动将立即被此类型的防病毒软件所标记。
基于异常的恶意软件检测方法可进一步分为：
被动检测（passivedetection）：利用扫描来检测推导程序是否符合正常范畴。
主动检测（activedetection）：在可控环境中（如沙箱或虚拟机）执行有问题的程序，然后观察该程序的行为，如果程序符合某些否定准则，将被标记为可疑。
尽管听起来很好，基于异常行为的恶意软件检测方法也有缺点。
这种类型的检测发生误报比较常见，这只是因为现代程序的复杂性。
第二，如果攻击者可以确保他的恶意代码行为与好的程序相似，也不会被发现。
PCTools的Threatfire零日恶意软件保护程序（Zero-DayMalwareProtection）是基于异常行为检测恶意软件方法的一个实例。
2、基于规则的恶意软件检测方法（Specification-basedmalwaredetection）
目前，基于规则的恶意软件检测是最有可能减少恶意软件问题的方法。
这是因为，任何程序（操作系统和应用程序都一样）的一切行动都会有一个预先确定的策略介入。
例如，电脑用户可以通过配置策略来禁止从网站下载文件。
与基于异常行为的恶意软件检测方法相比，基于规则的恶意软件检测方法的优势是灵活性和最低的误报率。
采用基于规则的恶意软件检测方法的一个实例是诺瓦盾反恶意软件（NovaShieldAntiMalware）。
四、我的研究结果
我很少在电脑中发现被隔离的恶意软件。
我注意到别的东西。
大多数由典型反病毒程序保护的电脑，在被感染后需要用专门的扫描程序（专杀工具）来清除这些冒犯进来的恶意软件。
写完这篇文章，我知道为什么会这样。
五、终思
作为抱有“安全胜于遗憾”信念的那类人之一，我将继续建议您使用反病毒程序。
我要改变的是所推荐的反病毒程序的类型。
它们肯定会包括基于异常行为和基于规则的恶意软件检测方法。
函数式编程的特性和适用场合
作者：JustinJames
翻译：PurpleEndurer，2010-01-05第1版
前言
函数式编程（Functionalprogramming，FP）也许能解决你遇到的某些开发问题。
如果你正考虑在工作中使用函数式编程，不妨来这儿了解一些你需要知道的知识。
正文
近几年来，函数式编程（Functionalprogramming，简称FP，下同）语言及其思想异军突起。
这部分要归因于各种各样包含这种思想的语言日趋主流（如Ruby），并且开发人员们正在学习如何更好地利用它们的功能特性。
它还为.NET平台（特别是C#）越来越适应许多FP思想推波助澜，使混合编程模型（hybridmodel）增多。
为了更进一步，现在Java平台（拥有Scala）和.NET平台（拥有F#）同时拥有支持面向对象和FP模式的全功能性语言；
在.NET4中，F#获得了与C#和VB.NET同等的重视。
现在，大多数开发人员有能力学习掌握FP语言及其理念，但什么时候这样做才有意义呢？
如果你正在考虑使用FP，你需要牢记这些事情：
FP代码没有“副作用（sideeffects）”。
FP中没有字面值（literalvalue），简单的功能只返回相同值。
许多FP语言具有“惰性计算（lazyevaluation）”机制，即函数不进行计算，直到需要用到它们的返回值。
在这种情况下，如果你定义“x”的值为“y+5”，“x”的值仍是未定义的，直到您尝试使用“x”的值，此时执行返回到它的定义，计算其值并提供给调用者。
这是福音（更好的性能），同时也是祸端（在某些情况值不确定）。
然而FP语言的这些特性都不应被视为障碍，因为它们代表了思想上的根本转变。
利用FP语言，你或许能出乎意料地提高代码的编写过程和代码质量。
但是，如果使用FP语言，你必须考虑到是否存在超脱工程（overengineering）或超脱思想（overthinking）的问题，特别是当代码的其他维护者可能需要学习一个新的语言的时候。
根据我的经验（在产品代码中使用FP的时间有限），我认为FP技术和语言在算法编码方案（algorithmiccodingscenarios）方面表现抢眼。
也许我的成见是基于FP的“一切都基于函数”的做法，但我发现FP的确在那方面表现得非常好。
例如数学就与FP很投缘。
几个月前，我看到一个F#代码例子，作者将其中的测量可变单元定义为提供转换功能的函数，因此可以十分自然地在代码中增加10米和45英寸。
另一种令人对FP实力印象深刻的例子是XboxLive排名系统，用F#替代C#重写后，代码行数只有原先的10%，而运行速度却达到了原先的95％。
同样，它是一个算法编码的例子。
FP丧失的优势在于基本的“库粘接代码（librarygluecode）”和创建结构类的能力，而这些正是现代主流软件开发经验的组成部分。
如果您的代码包含了很多看上去就像结构的类，并且绝大多数“算法代码（algorithmcode）”可归并为各个对象的属性和方法，那么使用FP就不值得了，除非你的项目非要使用它不可。
总结
总之，FP不一定是解决你开发工作中所面临的所有挑战问题的答案，但是值得考虑一下，看看它能否在工作中有用武之地。
选择学习新程序设计语言的技巧
如果你有兴趣学习一门新的程序设计语言，考虑这儿的五个问题会有助于你选择最适合你需要的那个语言。
我经常被人问道：“在开发工作中你是如何选择使用哪种程序设计语言的呢？”这是一个合乎情理的问题，特别是对于那些在开发领域只有极少或者没有经验的人而言。
直接了当地说“使用某某语言。”对我来说是一个巨大的诱惑，但我还是认为解释如何思考选择工作所用的语言会更好一些。
当你考虑学习哪种程序设计语言的时候，你需要问自己下列5个问题来作出满足需要的正确决定。
为什么要学习程序设计语言？
如果你的目标是学来编程，那么寻找那些传授基本原则的语言，如Lisp（或Scheme），或Ruby和Smalltalk也行。
有许多优秀语言是专门设计从根本上传授编程技术的。
你要绕过主流开发语言，而着眼于这些教学用语言中的一种，并寻找与之相关的练习册、教材或其他培训材料，这些资料会有效地教导你。
如果你想成为更好的程序员，这些教学用语言中的一种会让你受益非浅。
或者，你可以尝试一种非主流语言，尤其是当它使用的范式与你现在所用的不同的时候。
如果你要成就一番事业，那么你需要基于市场需求作出决定。
研究对你有吸引力的招聘广告（工作类型，地点，薪酬，所需经验等级……等等）。
跟踪这语言（和其他技能），这些广告提到的主要技能正是你需要学习的。
如果你认为你难于接受这种语言或环境，那么您可能需要重新评估你的事业目标。
如果你只是想要从中得到乐趣或创建自己使用的应用程序，那么你可以学习任何你想学的语言！
如何做程序设计语言的学习计划？
你的计划和学习风格会影响到你对编程语言的选择。
例如，如果你在面对面的课堂环境中学得最好，那么你需要确保你想学的课堂存在。
对于许多非主流语言，可供选择的书也很少．
无论如何，你要确保你觉得在这种语言的在线社区混得舒适。
这就要考虑这些问题：他们是如何对待新来者？
提了很多问题得到解决了吗？
是否有一个良好的机制把问题整理归档？
在这一点上，是否有好的文档资料？
一个文档资料都不完整的编程语言，会迫使你依赖于社区，而一个没有助益的社区可以令你迅速沉沦。
这个编程语言有什么工具集，库和框架支持？
有些人真的很喜欢在专门的IDE中工作，其他一些人则完全乐于使用一个基本文本编辑器。
无论你的风格是哪种，请确信这个工具可以支持。
例如，即使你喜欢纯文本编辑器，也可能希望它能支持你所选择的编程语言的格式和语法分色。
按照同样的思路，你要确保语言的库和框架支持你打算做的应用程序。
举例来说，如果你计划用于科学应用程序，你要检查数学库，以确保您不需要花很多时间来实现基本数学例程。
你计划做什么？
如果你已经心仪于一个特定类型的应用程序，这会影响你选择什么样的编程语言来学习。
一些编程语言比其他的更适合某些应用程序。
例如，如果你在做一个Web应用程序的工作，你要确保你选择的语言具有在这些应用中能用得上的能力，并且是为该方案设计的。
在服务器上使用CGI模式，几乎任何语言都可用于开发，但你很快会发现，有些语言会比其它的语言做得更好。
这部分涉及到工具集，框架和库（不论你使用哪种语言，只能手工处理HTTP连接都是一件苦差事），但编程语言在这个事情中又扮演举足轻重的角色，很多开发语言之所以成功，是因为它的一个小功能或一些特性使得某种特殊类型的程序更易于开发。
看看与你要创建的类似的应用程序，试着找出开发者使用了哪些语言，以及他们选择这些语言的原因。
这将使你明了自己应该学习什么编程语言。
我乐意学习次主流编程语言吗？
目前使用次主流编程语言的可能性是存在的。
对于个人开发，这不是一个问题，但许多开发环境对非主流语言来说存在风险，某些语言的专业性可能会限制你的工作选择，或你的老板可能不愿意让你在工作项目中用该语言。
尽管如此，学习一种不是很流行的编程语言的价值还是很大的。
首先，您可能会发现自己处在变成一个高薪专家顾问的道路上。
此外，你所学的每一种语言会教给你一些编程中的新事物，即使你在日常工作中不使用这种语言。
结论
学习新的编程语言是一个非常有益的经验，但重要的是不要浪费你的时间。
挑选出满足需要的合适的编程语言并不容易，而风险是，你所学的语言中可能会有一些事情让你反感。
但是利用这些技巧，你应该能更好地确定哪些编程语言将会满足您的需求和目标。
你会给新程序员提供什么标准来帮助他们挑选语言呢？
X的现状和未来
作者：贾斯汀·詹姆斯
翻译：PurpleEndurer，2009-07-10第1版
分类：编程语言
标签：开发人员，X，C/X，编程语言，软件开发，软件/网站开发，JustinJames
来看看贾斯汀·詹姆斯为什么认为具有良好工作能力的X开发人员有很大的潜力罢。
TechRepublic成员OlegF（一名有经验的X开发人员）询问我对X的现在和未来的看法。
此外，他需要X如何适应.NET平台，网站开发，以及云计算的信息。
我的回复如下：
我认为对大多数开发人员来说，X作为通用编程语言的时代正快速走向终结。
X仍然有许多用武之地，特别是操作系统级工作，低层工作（嵌入设备，设备驱动程序等等），某些高性能应用程序，而像.NET或Java这样的架空系统上的应用程序太大了（像一个办公软件套装）。
一些开发人员仍然继续使用X开发其它不太复杂的语言也能处理的应用程序。
但对典型程序员而言，X是要为极小改进而挠破头皮的东东。
多数开发人员面临的性能问题不是转移到本地代码就能解决的那种问题；
一旦你偏向性能，在大多数情况下X是一个相当具吸引力的应用程序开发选择。
我所讨论的一些开发人员说在.NET管理环境中使用X不是特别有吸引力；
这减少了许多在Web开发中使用它的机会，除非你想在CGI模式中使用它。
关于CGI有好（开销小，简单概念模型）有坏（你的应用程序不得不留意许多更低级的任务）。
就我所闻，在.NETCLR，X丧失了速度优势以及许多让X更有用的东西。
这并不是说X末路不远。
我认为X加入了COBOL和FORTRAN的行列，作为具有大量安装基数的传统语言，需要有人维护和扩展现存应用程序50年以上。
另外，由于大量的原因，许多新的开发项目将用它来启动（熟悉，支持库，传统/习惯，文化，等等）。
我也怀疑它会作为已“亡”语言（像COBOL）重拾荣耀，因为议论和宣传比非使用率少得多（也与COBOL类似）。
我不想使X的未来听起来令人感觉暗淡；
如果有什么的话，我认为具有良好工作能力的X开发人员有很大的潜力。
如果你是X开发人员，我建议你坚持用这个语言。
你正在做的事情耀眼，或获得了与Web应用程序在主流出版物上的同样的关注吗？
没有。
但按当前薪水结构，我觉得有经验的X开发人员将暂时拿到很丰厚的工资。
另外，因为剩余的X工作是高难度的，并且学习X的人少了（现在的大学中教它不是很多），我希望X开发人员能有更多的就业保障，和比.NET或Java开发人员更好的长期补助。
尽管在Web开发中X任何时候都不大可能成为主流，并且用X开发桌面应用程序也少于平时，但我认为X在云计算的某些方面有许多上乘机会。
对一些项目（想想那些很适合超级计算机的人），“云”给X开发人员提供了一条路，来得到与网格计算相同的益处，但有更多的灵活性。
这些项目和适合使用X的开发人员的项目类型中有许多相互重叠的。
因此，我认为云计算将会在许多项目中取代或补充网格和超级计算机，并提供了一个以崭新和创新的方法使用X的极好机会。
请记住，这些分析大部分的重点是Windows领域。
就从我看到的来说，*nix开发社区仍然是非常倾向C/X。
关心Windows中机会减少的X开发人员一定要来看看*nix中的发展。
我相信X将慢慢隐退到后台，但它不会消亡也不会永远变得无足轻重。
尽管我所知的绝大部分开发人从未在真实世界中接触过X，但许多开发人员将会从学习它中受益，即使仅仅为了增进对包括Java，.NET和Ruby在内的各种语言的一些认知。
将XForms与GoogleWebToolkit相结合，第1部分:介绍GWT的JavaScriptNativeInterface
本系列文章介绍如何结合使用GoogleWebToolkit(GWT)和XForms创建动态Web应用程序，分为四部分。
第1部分采用自下到上的办法说明结合使用GWT和XFoms中存在的问题。
介绍了这两种技术的基础知识，考察了能够让两者和平共处的相同之处。
这是同时使用GWT和XForms开发Web应用程序的基础。
简介
GoogleWebTookit(GWT)已经成为一种非常受欢迎的开发Ajax应用程序的方法。
它可以让Java开发人员利用已有的Java知识迅速创建Ajax应用程序，而不需要去学习JavaScript。
XForms代表了HTML标准的新发展，通过简单的指令就能创建复杂的、动态的行为。
GWT和XForms都非常强大，足以单独解决很多问题。
那么为什么还要将两者结合起来呢？
这恰恰也是本系列文章所要说明的。
本系列文章中，我们将建立一个简单的Web应用程序管理摇滚明星和他们的相册。
我们将同时使用GWT和XForms，最后您就能够把这两种技术完全融合在一起了。
第1部分中将通过一些简单的例子来介绍这些技术。
对于GWT我们使用它自带的KitchenSink这个例子。
这个例子曾经被用于展示GWT的多种UI小部件。
前提条件
本文使用GWT1.4和MozillaXForms插件0.8（相关链接请参阅参考资料部分）。
这个MozillaXForms可用于任何基于Mozilla的Web浏览器，如Firefox和Seamonkey。
使用GWT需要了解Java技术和一些Web技术如HTML、CSS。
文中还用到了大量JavaScript代码。
XForms采用模型-视图-控制器范型，因此熟悉MVC就足够了。
原来接触过XForms和GWT当然很好，但不是必需的。
XForms
现在创建Web应用程序，目标很可能是创建支持Ajax的Web应用程序。
您可能遇到过各种各样的Ajax，比如能够异步添加和修改数据的Ajax。
如果说在Ajax这个词还没有发明之前已经有很多人想到过这些形式，您可能会奇怪。
用Ajax完成的很多常见的功能也能用XForms实现。
XForms这种标准化的技术将成为下一代HTML规范的核心。
XForms的关键在于将数据和数据的物理视图分离开来。
听起来是否有些耳熟？
通过分离数据，就可通过任何形式的HTML呈现出来。
还可以与form元素相结合，从而实现输入数据和编辑已有数据的无缝衔接。
人们使用Ajax来解决很多相同的问题。
在Ajax中需要保持数据和表示（HTML）的分离。
通常会创建JavaScript对象来表示这些数据。
XForms提供了一种更加标准化的方法。
它用XML保存实例数据。
我们来看一个例子。
XML实例数据
XForms采用熟悉的模型-视图-控制器范型。
因此XForm背后的数据包含在XForm模型中。
清单1给出了一个例子。
清单1.XForms模型
这里有几点需要注意。
首先是XForms模型中包含的XForms实例。
实例是模型所代表的真正的数据。
可以指定实例的来源。
与JavaScript和CSS引用其他资源很相似。
如果指定source属性，浏览器就会发出单独的HTTP请求来加载这些数据。
当然也可直接包含实例数据。
其次，模型和实例都有ID。
后面将看到，这恰恰是它们能够用于其他技术的关键。
第三，要注意不同的XForm-submission声明。
这里列举的大动作和基本HTML表单中的相似。
都是表单数据需要提交到的URL。
要注意method属性。
它也类似于HTML表单中的method属性。
它说明提交使用什么样的HTTP请求。
这就是整个模型。
下面再看看XForms中的视图。
XForms视图
模型声明以后，用模型中包含的数据创建视图很简单。
XForms包含很多常见的控件处理模型实例数据。
每个控件都能引用模型的实例数据。
实例数据用XML格式表示，因此用XPath很容易导航和引用。
XForms完全支持XPath2.0规范。
我们来看几个例子。
处理模型数据最简单的办法就是在浏览器上显示出来。
可以使用output控件，如清单2所示。
ref属性就是一个XPath表达式。
它对模型中的实例数据求值。
这里不但有XForms控件，而且在output控件中使用了XHTML表达式，如div、CSSclass属性。
这不是什么技巧，只不过在巧妙地提醒您未来XForms将成为HTML完整的一部分。
设计XForms是为了交换，而不仅仅是显示数据。
因此必然有编辑数据的控件。
看看清单3。
清单3.XForms中的表单控件
清单3中的例子创建了一个带标签的input字段和Submit按钮。
两者都和模型绑定在一起。
输入字段绑定到实例数据。
从HTML元素的角度来看，该输入字段预先填充了数据模型中绑定的值。
提交控件也就成了HTMLSubmit按钮。
但它也是绑定到模型的。
它引用了模型中的submission元素。
该元素指定了一个表单动作。
因而，提交控件将创建一个HTMLSubmit按钮，单击该按钮就会按照模型的提交规范向URL发出HTTPpost请求。
什么发送给该URL呢？
当然是XML数据。
数据绑定到输入控件，用户输入的新数据在HTTPPOST到服务器之前将自动传递给模型。
目前一般而言，HTML表单的提交就是导航到那个POST的动作URL。
这是典型的“Web1.0”方式，幸运的是对于XForms来说并非如此。
在XForms应用程序中，提交仅仅是传递到服务器的数据。
和导航没有关系。
这是清晰划分模型（数据以及对数据的操作，如提交给服务器）和视图的一部分。
结果还要等时间的考验。
这难道不是典型的Ajax应用程序吗？
可能需要无数行JavaScript代码才能将数据绑定到表单、捕捉表单的提交、异步发送数据到服务器然后重绘显示数据的部分视图。
这些都压缩到XForms实现中去了。
仅仅用XForms就能完成大量的工作，但这绝不是一种栅栏围起来的封闭技术。
它很容易和基本的客户端技术交互：HTMLDOM和JavaScript。
XForms和JavaScript
通过XForms，应用程序数据可以用模型表示，绑定到不同的视图。
这些开发服务器端代码时常用的方法，由于Ajax在客户端也变得越来越常见。
XForms是一种客户端技术，因此使用浏览器的原生语言JavaScript很容易访问它并不奇怪。
XForms的强大功能完全可以通过在同一页面上执行的JavaScript访问。
实际上，所有的XForms成分，包括模型和视图都属于建立的HTMLDOM。
这正是下一代HTML规范的核心。
因而就像访问HTMLdiv一样，可用熟悉的getElementById()格式来访问。
清单4给出了使用JavaScript访问XForms模型的一个例子。
清单4.通过JavaScript访问XForms模型
通过清单4可以看到，能够把XForms模型作为DOM的一部分来访问。
得到的是标准的JavaScript对象。
它有专门的方法，如getInstanceDocument()。
然后就可以访问XML实例数据了。
这是真正的XMLDOM对象，可以像其他任何XMLDOM对象一样导航和修改。
GWT
GWT是2006年的JavaOne上提出的。
当时已经得到了Java技术开发人员的广泛接受。
利用已有的知识再加上对HTML和CSS的基本了解，Java技术开发人员就能快速创建支持Ajax的Web应用程序。
显然这是一种合适的快速原型开发工具，但实践证明也适用于生产环境。
比如，Google自己的将Web应用程序和WebAPI融为一体的在线集成开发环境MashupEditor，就是用GWT开发的。
GWT的很多强大功能来源于将Java代码编译成JavaScript的能力。
Java技术开发人员可以用熟悉的事件驱动编程直接与服务器端模型连接在一起。
多数Java开发人员乐于不用自己编写JavaScript代码。
他们享受到了强类型语言的好处，同时又能使用标准工具（如Eclipse）调试支持Ajax的Web应用程序。
如果愿意编写JavaScript代码，GWT能提供更多的功能。
最重要的是，JavaScript是连接GWT世界的关键。
如果需要非GWT程序和GWT程序交互，或者相反，那么JavaScript就是唯一的办法。
所幸的是，GWT很容易和其他技术交互。
它打开了自身底层JavaScript的盖子，允许开发人员直接在GWT类中编写JavaScript代码。
就是说，通过GWT的JavaScriptNativeInterface(JSNI)可以在编写Java类的同时编写JavaScript代码。
JSNI
GWT文档（请参阅参考资料）介绍了JSNI的一些应用。
单纯用JSNI就能实现客户端方法。
JSNI可以封装已有的JavaScript，非常适合将已有的应用程序迁移到GWT。
使用JSNI可以访问客户端Java代码（编译成了JavaScript），反之亦然。
关键在于用JavaScript能够实现的功能，用GWT和JSNI都能实现，不需要Java表示。
我们来看一些例子。
JSNI的例子
为了说明JANI可以做什么，我们先从GWT自带的一个例子入手。
这个例子是KitchenSink。
它展示了GWT中的UI元素。
也非常适合试验JSNI，因为只有客户端代码，不需要和服务器通信。
我们将定义一个用JavaScript实现的Java方法。
首先从JavaScript所能做的最简单的事情开始，经典的“Helloworld”。
Helloworld的JSNI版如清单5所示。
清单5.HelloWorldJSNI
使用这个JSNI方法，需要将其添加到KitchenSink类，让它在执行Java方法showInfo()的时候调用JSNI方法，如清单6所示。
清单6.从Java调用JSNI
GWT对JavaScript方法的处理就像是在Java平台上编写的一样。
简单明了。
编译然后在托管模式下运行会看到图1所示的结果。
太简单了。
现在稍微增加一点难度，让Java和JavaScript共享数据。
从JSNI访问Java变量
要让JSNI真正有用，必须能够在Java和原生JavaScript代码之间共享数据。
从而能够利用GWT和JavaScript各自的优点。
清单7是“Helloworld”的改进版本。
清单7.JSNI和Java变量
变量myVar在Java中定义，但是可在JSNI方法中访问，如清单8所示。
清单8.在JSNI方法中访问myVar变量
现在编译新的KitchenSink并单击按钮，将看到图2所示的结果。
图2.Hello变量
现在，您可以轻松地在Java和原生JavaScript代码之间交换数据。
因为您已拥有所有结合使用GWT和各种JavaScript技术所需的构建技术，如XForms。
结束语
XForms和GWT都为现代Ajax应用程序提供了有力的抽象和强大的工具。
而且都有和“底层”JavaScript的联系。
不但可以用JavaScript补充各自本身已经很丰富的功能，而且提供了将两种技术结合起来的公共基础。
现在了解了集成XForms和GWT的蓝图。
第2部分将按照这个蓝图开始融合XForms和GWT。
将XForms与GoogleWebToolkit相结合，第2部分:创建艺术家专辑管理表单
这个分为四部分的系列文章的第1部分提供了关于GWT和XForms的坚实基础，并研究了如何结合使用这两种技术简化Web应用程序的创建过程。
在第2部分中，您将构建一个简单的Web应用程序，即摇滚巨星应用程序，此程序拥有两个页面：一个用于查看艺术家，另一个用于查看这些艺术家录制的专辑。
第一个页面将使用GWT构建，它将使用GWT的小部件和GWT的Ajax抽象。
该页面将链接到第二个页面，后者使用XForms构建并使用XForms数据模型和XForms控件创建自己的UI。
前提条件
加快学习速度！
请阅读本系列的第1部分，介绍GWT的JavaScriptNativeInterface。
本文使用GWT1.4和MozillaXForms插件0.8（相关链接请参阅参考资料部分）。
这个MozillaXForms插件可用于任何基于Mozilla的Web浏览器，如Firefox和Seamonkey。
使用GWT需要了解Java™语言的知识和一些Web技术如HTML、CSS。
文中还用到了大量JavaScript代码。
XForms大量采用模型-视图-控制器范型，因此熟悉MVC就足够了。
原来接触过XForms和GWT当然很好，但不是必需的。
本文中的代码是使用Eclipse3.3开发的，但并不需要了解Eclipse。
使用GWT管理艺术家
构建摇滚巨星应用程序所需做的第一件事是获取所有艺术家的列表。
当然，您也希望可以向列表中添加新艺术家。
列表还将为您提供浏览到第二个页面的方式，在第二个页面中，您将能够管理某个艺术家所录制的专辑。
您将为艺术家页面使用GWT。
您将使用其内置的小部件为页面创建漂亮的UI，并使用其Ajax抽象简化数据的加载和保存。
应用程序数据
应用程序中的数据将存储于简单的XML文件中。
XML是传输数据的一种常见格式，当然也是XForms原生的。
您可以轻松地将数据保存到关系数据库中，但是您也可以很好地将其序列化为XML格式以用于不同目的。
使用XML（而不使用关系数据库）使数据更加简单，从而可以将精力集中在应用程序的关键部件：GWT和XForms之上。
带GWT的艺术家模型
应用程序需要使用一个简单的数据模型表示艺术家。
使用GWT可使该过程与创建一个简单的Javabean一样容易，如清单1所示。
清单1.艺术家模型：JavaBean
如前所述，这只是一个标准的Javabean：三个字段带有相应的getters和setters。
您将对艺术家设置一个数值ID以方便引用。
如果使用数据库表保存艺术家，那么可能也需要使用此ID。
要注意的是，它位于应用程序的客户机包中。
因此这个类将被编译为JavaScript。
但是这对您没什么影响。
您仍然可以使用Java编程，无需考虑后面的JavaScript。
最后，注意您的类实现了IsSerializable标记器接口。
任何需要通过网络发送的类（比如，Ajax调用的请求或响应的一部分）都需要此接口。
现在，考察一下如何使用GWT为Artist对象列表创建UI。
为艺术家列表使用GWT小部件
GWT的一个优秀特性是，带有一组小部件可用于创建通用的UI结构。
您可以使用熟悉的Java语法创建UI元素。
如果您从事过Swing或SWT编程，则会对此非常熟悉。
此时，您将使用FlexTable。
这是一个非常适合应用程序的动态表，因为没有设定艺术家的数目。
FlexTable可以进行扩展以适合艺术家的数目。
填充FlexTable的代码如清单2所示。
清单2.创建一个艺术家表
如果已经存在表，那么清单2中的代码将清空该表。
然后创建一个表头。
表头的惟一特点是使用了样式。
我们可以大致观察一下。
代码接下来对艺术家进行迭代，将其添加到表中。
我们来观察一下清单3中添加了表的页面。
清单3.艺术家页面
HTML没有太多工作要做！
所有的难题都由GWT解决。
HTML所做的惟一工作就是为表头内置了一些CSS。
现在，页面已具备了UI元素，因此只需添加一些数据即可。
您将使用GWT风格的Ajax获取数据。
获取艺术家数据：使用远程过程调用
您所拥有的优秀GWT部件可以用来显示艺术家列表。
现在，您只需要一个列表。
为此，您将创建管理艺术家的服务。
您将使用GWT（如Ajax）异步调用此服务。
这是一种典型的GWT远程过程调用（RPC）。
首先声明服务的接口，如清单4所示。
清单4.ArtistServiceInterface
注意，服务扩展了GWT标记器接口RemoteService。
这是一个必需的GWT约定。
另外还要注意，getAllArtists()调用返回了一组Artist对象。
这些是先前定义的与数据模型相同的Artist对象。
您可能希望让它返回Collection<Artist>或List<Artist>，但是不要这样做。
GWT在客户机代码中不支持泛型，例如编译为JavaScript的代码。
JavaScript中没有范型，而且运行时泛型信息也不可用。
您也可以返回java.util.List，因为这是允许的，但是数组就可以很好地满足要求并且具有强类型。
GWT需要使用从客户机调用的所有接口的异步版本。
接口相应的异步版本如清单5所示。
清单5.异步服务接口
这里的关键是服务名的Async后缀。
这是一种命名约定，可使GWT将此接口与清单4中所示的接口匹配。
另外还要注意，所有调用实现异步的方式，这说明这些调用拥有void返回类型。
它们都拥有一个AsyncCallback，这使GWT能够在接口服务器端实现处理完收到的请求后，调用回调函数。
让我们观察一下接口的服务器端实现，如清单6所示。
清单6.接口的服务器端实现
关于这个类有几个需要注意的地方。
其一是它扩展了RemoteServiceServlet并实现了您定义的接口。
RemoteServiceServlet是一个用于处理Ajax请求的典型Javaservlet。
运行时，客户机代码的请求将调用超类的方法，而超类将使用反射调用客户机请求的实际方法。
最后，注意，您将使用DataAccessObject(DAO)接口ArtistDao。
您将使用基于文件的实现ArtistFileDao，但是您可以轻松地将其交换为基于数据库的实现。
该类还拥有处理读/写文件及解析XML的代码。
我们来测试一下应用程序。
查看艺术家：托管模式
到目前为止，所有内容都是纯GWT的。
GWT的一个优秀特性就是您可以使用托管模式。
如果您在使用Eclipse，则可以从中启动应用程序并进行查看。
但是您首先需要一些数据。
清单7给出了一个简单的数据文件。
清单7.测试数据
现在您已拥有测试数据，可以开始启动应用程序。
应该出现图1所示的界面。
图1.以托管模式查看艺术家
这是测试数据中的艺术家列表。
现在您只需一个简单的表单输入新艺术家。
添加新艺术家：使用GWT创建表单
您需要一个简单的数据输入表单以输入新艺术家。
所幸的是GWT也包括了创建表单的小部件。
您可以使用GWT通过编程创建表单，如清单8所示。
清单8.使用GWT的数据输入表单
这段代码同样非常简单。
您创建了一组小部件：标签、文本框和按钮（以及您一直使用的FlexTable）。
您还将使用几个面板，充当布局管理器处理小部件的布局。
然后将事件侦听程序添加到一个按钮上以添加新艺术家。
事件侦听程序将调用后端服务。
我们来查看一下清单9中的代码。
清单9.添加新的艺术家方法
在这段代码中，您看到了被调用接口的异步版本。
创建了一个异步回调方法。
在本例中该方法非常简单，并且只在调用失败时使用。
因为您可以继续操作，将艺术家添加到表中，而不用等待服务器响应。
这就提供了很好的用户体验，因为可以即时添加艺术家，但是这里假定很少出现调用失败。
本文最后有完整的源代码下载。
我们来查看一下添加完表单后的UI，如图2所示。
图2.查看艺术家并添加新艺术家
填写表单并单击AddArtist按钮。
UI应立即被更新，如图3所示。
图3.添加的艺术家
您已经了解了使用GWT创建UI元素和使用Ajax检索数据及将数据保存到后端服务的方式。
我们来看看如何使用XForms创建管理专辑的页面。
使用XForms管理专辑
应用程序的第二部分将按艺术家查看专辑列表。
自然地，您会希望创建单个的页面为每个艺术家显示专辑。
那么您如何知道应该显示哪个专辑呢？
很明显，有几种不同的方法可以实现此功能，但是我们将使用命令模式。
命令会告诉您创建页面所需的所有信息。
这样，您需要了解要显示哪个专辑，换言之，哪个艺术家的专辑。
为此，您需要一个request参数指定艺术家，因此直接称之为artistId。
您需要一个链接从第一个页面链接到第二个页面，而该链接需要使用artistId参数。
从GWT页面到XForms页面的链接
我们回到第一个页面，创建一个到第二个页面的链接。
这只需要稍微修改一下代码，如清单10所示。
清单10.添加指向Artist列表的链接
修改的代码是用于设置表中左侧专辑的代码。
您没有使用setText(...)，而是使用了setHTML(...)。
这让您能够将HTML置于表中，从而创建一个简单的指向新页面“Albums.jsp”的链接。
您使用了一个JSP，因此可以构建动态页面。
动态部分就是只显示由artistId指定的艺术家所录制的专辑。
注意，artistId参数是链接的一部分。
现在您只需创建此页面即可。
使用GWT创建XForms页面
您可以像创建其他Web资源（如HTML或CSS页面）那样创建JSP。
您也可以在页面上使用GWT。
所需做的惟一操作就是引用GWT生成的JavaScript文件。
现在，您将使用服务器端代码加载指定艺术家录制的专辑。
您将把该数据直接写入XForms模型实例数据，如清单11所示。
清单11.使用服务器逻辑内联数据
Javascriptlet处理逻辑以查明要显示的专辑。
同样，您是从XML文件加载数据。
过滤逻辑包含在一个外部类中，该类可作为本文源代码的一部分下载。
同样注意，要在XML文件中创建一些测试数据。
测试数据也随附在文章的源代码中。
以Web模式测试XForms页面
现在，您已准备好测试XForms专辑页面。
截止目前，您已使用GWT的托管模式测试了GWT艺术家页面。
您可以再次以托管模式启动，但是您需要再次切换到GWT的Web模式以测试新页面。
为什么要这样做呢？
XForms所需的浏览器插件在GWT的托管模式下不可用。
图4展示了如何切换到Web模式。
图4.切换到Web模式
单击Compile/Browse将应用程序切换到Web模式，如图5所示。
图5.Web模式下的应用程序
您现在应该会看见应用程序在默认的Web浏览器中运行。
现在，您可以单击某一个艺术家，然后会看见图6所示的界面。
图6.测试Artists页面
页面显示了艺术家的一列专辑。
它使用了一些简单的XForms控件从模型的实例数据中迭代XML数据。
在第3部分中，您将看见如何为数据条目添加XForms控件，以及如何将其连接到GWTAjax调用以允许唱片公司的工作人员在此页面上添加新专辑。
结束语
本文作为摇滚巨星系列的第2部分，介绍了如何使用GWT构建交互式页面并将其链接到使用XForms的页面。
在第3部分中，您将重构本文所建立的摇滚巨星应用程序。
您不会实际更改本文所创建的应用程序的功能，但是您将了解如何使用页面上的GWT元素作为XForms元素使应用程序更具交互性。
硬盘是作为计算机使用频率最高的元件之一,出现的故障可以说也是最多的,今天让我们一起来看一下日常使用中常见的一些故障
1、问cmos中找不到硬盘?
答1、可能是硬盘坏了；
2、如果光驱同硬盘接在同一条电缆线上，开机检测不到硬盘，一般是因为跳线问题，将光驱设置为从盘方式即可，不过如果是原来正常，那就不是这个问题；
3、用一块好的硬盘与它挂在一起，坏盘只接电源线不接数据线，好盘电源线数据线都接好，用好盘启动，然后，小心点把数据线拔下，接在坏盘上，再用dm低格，办法很有用，不过有点危险，实在不行可以试试看；
4、如果软盘都无法启动则可能是中了逻辑炸弹，可以用搜索引擎搜索逻辑炸弹寻找解决方法；
5、更换一条新的数据线。
2、问:我的硬盘好响，但我在DOS下扫描硬盘没有发现坏区，我的硬盘会不会很快就坏？
答：因为硬盘属于电子存储和物理存储相结合的，所以即使硬盘没有坏区，硬盘内还有电路板和马达，马达在使用中也处于老化状态，因为硬盘也属于耗材，所以硬盘理所当然会坏，只是如果没有坏区的话，还可以使用一段时间的！
3、问：最近打开电脑时找不到硬盘,无法启动.用软盘或光盘虽然能启动但也找不到硬盘而无法进入操作系统.但却又能找到硬盘顺利的启动并进入操作系统.请教是什么原因?
谢谢!
答：平时打开电脑属于冷启动，而按下X再启动属于软启动！
软启动本身就是在硬盘基础上来启动系统，冷启动的话，是在通过BIOS检测后，用硬盘来引导系统，而刚开电脑根本找不到硬盘！
请检查硬盘数据线和电源线的连接！
如果还是没有问题的话，那就是你的硬盘出现了引导区损坏！
请重新分区来解决！
4、问：硬盘容量本来是40G的，但是有一次可能是保护卡没卸的原因吧，不管是分区或格盘都变成32G多了，（正常的是38G多点）。
更换数据线也一样。
而且保护卡也打不上了。
用PQ或fdisk检测硬盘容量都不对。
请教：如何让它恢复到40G？
找回失去的空间？
答：有些保护卡是需要一部分硬盘空间来恢复系统的，所以，保护卡没有正常操作，而系统认为保护卡依然占用空间！
所以出现了无法使用的空间！
请重新分区来解决！
5、问：有时候在开机自检时出现：
当检测到1时就不动了，象死机一样，并且此时硬盘和光驱的灯一直常亮不闪！
答：这个是由于系统启动的时候，从BIOS启动，然后再去检测IDE设备！
系统一直检查，而设备未准备好或者无法使用，造成死循环，然后就无法启动！
请检查硬盘数据线和电源线的连接，让系统找到硬盘，问题即可解决！
6、问：‘我的系统是windowsxp,硬盘40G.通过PQ分区为C/D/E/F四个盘．现在系统正常，C/D/E三个盘都正常。
在访问Ｆ盘时内容都显示正常，但在资源管理器中上方显示＂未指定＂，尝试用ＰＱ重新格式化、在开始／所有程序／附件／命令提示符下用format格式化后再进入Ｆ盘，仍显示为“未指定”，请帮助！
非常感谢！
答：这是由于分区表中，无法读取F盘的引导信息。
所以，显示为“未指定”。
请在DOS模式下进入FDISK，然后删除F分区，重新创建，格式化，即可使用！
7、问：开机时，找不到硬盘，进不去，在CMOS中搜索也找不到？
答：请检查，硬盘数据线和电源线的连接，如果没有问题的话，则怀疑是硬盘分区损坏，请挂到别的计算机上来格式化，然后分区来创建引导分区！
8、问：有一块10G的昆腾硬盘,昨天非正常关机(拔的插头)后就不能启动了,提示硬盘出错.本想用主板查找硬盘,结果按到低格选项上了,还连回了几次车!
后来才发现了.用光驱启动后连FDISK命令都不能用,把硬盘接到其它电脑上就根本没有把这个硬盘识别出来?
我该怎样办才能修好这个硬盘?
答：低格的时候完全损坏了硬盘的引导区，因此，需要用别的硬盘来引导！
在BIOS中检测IDE设备来识别！
用诺顿来修复，如果还不行的话，找个和你一样的硬盘，然后就可以把分区表拷贝过来！
9、问：各位好：小弟有一块迈拓20G硬盘，2001年买回来的，前段时间在使用的时候遇到死机，冷启动之后，自检的时候可以看见硬盘，但是不能进入系统，用其他分区软件可以看见硬盘。
希望能够帮我找到解决答案，谢谢！
答：这个是由于你的系统错误而造成的无法启动，而且，关于死机，有很多的原因造成的！
请检查电脑的散热！
至于系统的问题，请用SYS修复或者覆盖安装系统来解决！
10、问：请教一个问题:
我的电脑有个现象在开机时进入cmos时一会死机,伴随硬盘(maxtor;40g)识别什么nikimixya300之类的型号(错误),
我试了一新内存,主板是新的,有点类似病毒怪状或者某个硬件有问题,之前还能进入系统但有死机状请尽快答复,不甚感谢!
答：很抱歉，您的这个错误并不完整，请写出完整的错误报告！
就错误出现的时候的情况判断，应该是系统识别不了硬盘导致的错误！
请确认您的硬盘没有问题！
到BIOS中检测硬盘是否可以被识别！
11、问：紧急求救:
我的移动硬盘(30G),存在里面的文件好多都找不到了(将近20G),只有几十个文件能看到(几十兆),
但是查看属性,移动硬盘的容量确实:已用20G,说明我的那些文件还在.我怎样才能再看到他们.
注明:我的文件属性全是存档;,没有加隐藏;.
答：不知道您的移动硬盘是什么牌子的产品！
某些移动硬盘和闪存都加了一个保护的隐藏分区，或者一个特别的加密分区！
所以，请仔细阅读您的产品说明书！
如果是自己做的移动硬盘，则可能是硬盘存在错误，无法读取，因此，容量空间已经占用！
但却依然看不到文件！
12、问：紧急求救：
我的IBM40G硬盘前几天用得还好好的，没有任何坏区或异常声音。
但今天开机自检时检测到硬盘型号后就死机，只听见不断读盘的声音，插入启动盘也进不了DOS，拆下硬盘后挂在别的机器上造成另一台机器也死机，情况和原来一样。
请问这是为什么？
答：听见不断读盘的声音，证明硬盘可以识别！
所以，是你硬盘本身存在的问题！
不断读盘的声音证明是你的硬盘马达不停的转动，但是却找不到硬盘引导扇区，硬盘物理问题！
而且插入启动盘也进不了DOS，拆下硬盘后挂在别的机器上造成另一台机器也死机，说明，其他计算机也无法读取硬盘引导扇区，造成无法读取的症状！
请到BIOS里识别，如果依然无问题！
请找当地专业维修硬盘的地方，修复你的硬盘磁头位置！
否则自己维修可能造成盘面损坏！
如果依然无法修复则硬盘报废！
13、问：请高手解答：
我想在98系统上增加一个80G的硬盘（原已有60G的硬盘），在CMOS中能找到新硬盘，可是在我的电脑却没有新增加的硬盘，是什麽原因，请尽快指教。
答：这个是由于你的硬盘跳线没有调的原因。
IDE接口上只能有一个主盘，所以，第二个硬盘虽然在BIOS里识别，但是系统识别不了，所以请把第二个硬盘的跳线设置为从盘，就可以使用了！
14、问:我的win2000莫名其妙开机后在bios里硬盘参数完全不对了，如我是酷鱼硬盘在bios里显示的是rt而非st!
不能进入系统。
答：硬盘识别错误，是硬盘与BIOS识别本身存在的问题，与系统没有关系！
怀疑是硬盘内部电路板出现问题！
是否对硬盘进行过非法操作或者错误运行某些程序！
造成硬盘识别错误！
解决方法：请把硬盘挂到别的计算机上看是否可以正常识别！
如果可以识别，则可能是你的主板ＢＩＯＳ损坏，如果识别不了，则是硬盘电路损坏！
15、问:我的迈拓20G5400转硬盘分区表破坏了，现在没有备份，谁能帮我找一个啊，我已经用过所有办法了，现在只有找一样的硬盘的分区表了
答：解决方法：如果FDISK和PQ等硬盘工具无法解决的话，请找另外一台电脑，然后挂上去！
在好的那台电脑上格式化硬盘，然后就可以重新分区，正常使用了！
16、问：请问老师我的硬盘是西捷80G,可是在我的电脑属性中却只有76G少了整整4G我是不是被商家给骗了。
如果不是被骗是什么原因造成的
答：你这个属于正常现象，因为硬盘容量是用MB和GB来定的，标准定义为1024MB=1GB，但是厂家为了方便于计算和使用，在生产的时候，1000MB=1GB，这样的话，就少了2%的空间！
但是你这个硬盘多少了内容，怀疑是厂家在给你做系统的时候，做了个隐藏分区来备份系统！
请仔细检查！
解决方法：用FDISK或者PQ等硬盘检测工具来检测，这不是个很严重的问题！
17、问：‘不好意思，还有一个问题要问：
插入移动硬盘以后，在机器右下角可以看见可热插拔的图标，但是在“我的电脑”里却看不见移动硬盘盘符，后来把接线口直接拔掉再装上以后，出现了图标，但是却叫我格式化移动硬盘，点确定以后，又说函数错误。
老师能不能帮助解答一下这是什么原因？
答：这个是由于移动硬盘不和闪存一样用电子方式来传输，移动硬盘也需要用到一部分机械部分来读写数据！
而闪存只需要默认USB供电就可以正常工作，而移动硬盘需要的电量比闪存多许多，因此需要计算机重新启动来检测！
解决方法：重新启动！
18、问：我有一个昆腾火球的10.02硬盘，有时能找到，有时又找不到，请问是什么问题，可以修复吗？
谢谢
答：请问是不是在启动的时候时有时无呢？
这个主要是由于系统启动的时候，主板BIOS必须检测硬盘位置，你的10G硬盘属于早期产品，因此会出现硬盘坏道，或者硬盘分区表错误等问题，解决方法：检查硬盘数据线与电源线的连接，在BIOS中自动检测硬盘，用SCANDISK来检测硬盘是否有坏道！
19、问：我最近刚置了一台电脑，玩一会就会出现找不到硬盘的提示，还有玩大的游戏就会出现死机，是什么原因
答：硬盘的数据线与数据线的插头接触不良,因为是新电脑，所以硬件问题不是很大！
请仔细检查连接！
但是如果这个硬盘是返修货或者本身就有问题，也可以出现上述问题！
玩大游戏的时候出现死机器，这个应该是硬件不兼容或者软件不兼容造成的！
因为是新硬件，所以考虑兼容性问题，请问在买电脑的时候是否拷机以证明稳定！
如果没有的话，请安装主板驱动和显卡驱动，重新插拔内存来解决！
20、【问】换过主板后，发现硬盘灯一直在微闪，请问这是正常的吗？
【答】硬盘灯微闪并不代表就是在读盘，轻微的闪烁只是电流的原因，很正常的，如果没有其他不正常现象可以不用担心。
鲜为人知的安装卸载绝技巧用Rundll32
在Windows系统中安装和卸载程序是件非常容易的事情，一般用户通过安装和卸载程序向导就能很轻松地完成。但安装和卸载Windows程序还有些鲜为人知的小技巧，使用Rundll32命令安装和卸载Windows程序就是其中之一，可能你从来还没接触过，下面我们就一起领略它的神奇功能吧！
提示：Rundll32.exe是Windows系统提供的一个命令，它用来调用32位的DLL函数（16位的DLL文件用Rundll.exe来调用　。DLL文件是Windows的基础，所有的API函数都是在DLL中实现的，它不能独立运行，一般由进程加载并调用，运行DLL文件最简单的方法是利用Rundll32.exe，它的命令格式是“Rundll32.exe动态链接库名函数名参数名”。
1．卸载微软Java虚拟机
在Windows系统中，要想IE浏览器执行包含Java小程序的网页，必须安装微软Java虚拟机（MSJVM），WindowsX已经捆绑了MSJVM，WindowsX中虽然已经剥离了微软Java虚拟机，但还是可以手工安装。不过，有个现实我们不得不面对：由于微软和SUN公司的明争暗斗，微软已经停止对MSJVM的开发，因此很多用户改用SUN公司提供的Java虚拟机。但微软没有提供MSJVM的卸载工具，使用Rundll32命令，我们可以轻松卸载MSJVM。
单击“开始→运行”命令，在“运行”对话框中输入“RunDll32advpack.dll,LaunchINFSectionjava.inf,UnInstall”，回车后系统会打开“MicrosoftVMuninstall”对话框，单击“是（Y）”按钮后，系统就会开始卸载微软Java虚拟机，卸载完成后需要重新启动系统。
接下来删除“X”（即Windows的安装目录，Windows2000系统为Winnt目录，WindowsX为Windows目录）下的Java文件夹；“X\inf”下的java.pnf文件，以及“X\system32”下的jview.exe文件和wjview.exe文件。最后打开注册表编辑器，依次展开[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\JavaVM]分支和[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\InternetExplorer\AdvancedOptions\JAVA_VM]分支，删除这两个分支下的所有子键。
提示：以上方法不适用Windows98系统。
2．重新安装WindowsXP自带的IE6.0
Windows系统的IE浏览器漏洞很多，最容易出现问题。有时无法解决，就只能重新安装了。使用Rundll32命令可以很轻松地完成重新安装工作。我们以重新安装WindowsXP中的IE6.0为例：
首先将WindowsXP光盘插入光驱，然后单击“开始→运行”命令，在“运行”对话框中输入“Rundll32setupapi,InstallHinfSectionDefaultInstall132C:\windows\inf\ie.inf”命令，回车后系统会打开安装进程对话框，开始重新安装IE6.0。
提示：如果你的WindowsXP系统不是安装在C盘，请将“C＼Windows＼Inf＼Ie.inf”修改为“X＼inf＼ie.inf”。
3．卸载WindowsMessenger
卸载WindowsMessenger的方法很多，最常用的就是修改“Sysoc.inf”文件，但此方法比较复杂，使用Rundll32命令能很轻松完成卸载：
首先要确保已经关闭了Outlook和IE等Windows自带的组件，然后单击“开始→运行”，在“运行”对话框中输入“RunDll32advpack.dll,LaunchINFSectionX\inf\msmsgs.inf,BLC.Remove”命令，回车后系统会打开一个卸载对话框，单击“是（Y）”按钮后，系统就开始卸载WindowsMessenger程序。
以上只是简单介绍如何使用Rundll32命令卸载和安装Windows程序的几个实例，还有很多Windows程序的安装和卸载可以使用此方法，就不再详细介绍了，请大家慢慢体会。
数位板也玩多点触控Wacom推Bamboo系列新品
2009年9月24日，世界领先的数位板系统和笔感应式数位屏系统的制造商Wacom公司在北京隆重举行产品发布会，在中国市场与全球同步推出最新的消费级数位板Bamboo系列产品。该系列新产品创造性地把多点触控技术和世界领先的笔输入技术同时融入到数位板产品当中，让人们通过数位板不仅能够用压感笔，而且能用手指来操作电脑。从而以更自然、更直观、更人性的方式与电脑进行交互，并借助最新Bamboo的多点触控和笔输入功能，获得更丰富美妙的电脑使用体验，享受更多乐趣。
WacomBamboo系列数位板
为了能让数位板这种曾经是专业的设计工具进一步走近普通消费者，让他们能随心所欲地表达自我，丰富他们的电脑生活，2007年，Wacom公司在全球市场同步推出面向消费市场的新品牌系列产品——Bamboo，鼓励广大用户借助数位板，在电脑已成为人们日常工作、生活的重要沟通和展示平台的今天，来表达自身的独特风格，展现自己个性和缤纷创意，留下精彩印记，让电脑生活更加丰富多彩。
利用Bamboo，用户用一根手指在数位板上轻触，就可以进行选择项目、打开菜单、启动应用等多种操作；也可以用两根手指头同时触控数位板，进行滚动和快速滚动、伸缩、导航、旋转等操作，使电脑操作更轻松惬意。对于要求更高精度和压力感应的工作，比如绘画、修饰数码照片，或者是批注文件，则可以使用压感笔来实现。从而使得我们对电脑的操作有了更多的选择。
Bamboo新产品全面融合了Wacom公司在开发直观输入设备方面的丰富经验与创新实力，不仅在功能上实现了里程碑式的重大飞跃，开创了数位板提供多点触控功能的先河，同时在笔输入方面继续保持Wacom公司领先的优势，采用了Wacom特有的无线无源压感笔技术，而且在外形设计上以最具时尚潮流趋势的超轻超薄为理念，使得Bamboo更时尚、更精致，让人爱不释手。
Bamboo新产品系列更强调人性化设计，全部提供能够自定义的快捷键，所有快捷键都在同一侧，而且能左右手互换，无论是左手用户还是右手用户，都可以根据自己的习惯，把所有的快捷键和按键都设置在最合适的一侧，便于非优势手使用。同时，数位板边缘提供了完美的手腕支撑，让用户能够轻松地长时间使用；工作区域采用宽屏设计，能与宽屏显示器以及多显示器完美配合。另外，Bamboo新产品把外设的笔座转换成了挂在板子右侧的笔插，增强了实用性和时尚感。
Wacom此次推出的Bamboo系列产品包括了五款新品，分别是新BambooFunSmall（小幅面）、BambooFunMedium（中等幅面）、BambooPen&Touch、BambooPen、BambooTouch。分别针对不同用户群的不同应用需求而开发设计。并且所有产品均与目前流行的Windows操作系统和Mac操作系统配合，包括WindowsXP,WindowsVista(withSP2),MacOS10.4orlater。
Oracle数据库密码文件的使用与维护
概要：Oracle关系数据库系统以其卓越的性能获得了广泛的应用，而保证数据库的安全性是数据库管理工作的重要内容。本文是笔者在总结Oracle数据库安全管理工作的基础上，对Oracle数据库系统密码文件的创建、使用和维护作了详细的介绍，供大家参考。
关键词：Oracle数据库密码文件
在Oracle数据库系统中，用户如果要以特权用户身份（INTERNAL／SYSDBA／SYSOPER）登录Oracle数据库可以有两种身份验证的方法：即使用与操作系统集成的身份验证或使用Oracle数据库的密码文件进行身份验证。因此，管理好密码文件，对于控制授权用户从远端或本机登录Oracle数据库系统，执行数据库管理工作，具有重要的意义。
Oracle数据库的密码文件存放有超级用户INTERNAL／SYS的口令及其他特权用户的用户名／口令，它一般存放在ORACLE_HOME＼DATABASE目录下。
一、密码文件的创建：
在使用OracleInstanceManager创建一数据库实例的时侯，在ORACLE_HOME＼DATABASE目录下还自动创建了一个与之对应的密码文件，文件名为PWDSID.ORA，其中SID代表相应的Oracle数据库系统标识符。此密码文件是进行初始数据库管理工作的基础在此之后，管理员也可以根据需要，使用工具ORAPWD.EXE手工创建密码文件，命令格式如下：
C:＼>ORAPWDFILE=＜FILENAME＞PASSWORD=＜PASSWORD＞ENTRIES=<MAX_USERS>
各命令参数的含义为：
FILENAME：密码文件名；
PASSWORD：设置INTERNAL／SYS帐号的口令；
MAX_USERS：密码文件中可以存放的最大用户数，对应于允许以SYSDBA／SYSOPER权限登录数据库的最大用户数。由于在以后的维护中，若用户数超出了此限制，则需要重建密码文件，所以此参数可以根据需要设置得大一些。
有了密码文件之后，需要设置初始化参数REMOTE_LOGIN_PASSWORDFILE来控制密码文件的使用状态。
二、设置初始化参数REMOTE_LOGIN_PASSWORDFILE：
在Oracle数据库实例的初始化参数文件中，此参数控制着密码文件的使用及其状态。它可以有以下几个选项：
NONE：指示Oracle系统不使用密码文件，特权用户的登录通过操作系统进行身份验证；
EXCLUSIVE：指示只有一个数据库实例可以使用此密码文件。只有在此设置下的密码文件可以包含有除INTERNAL／SYS以外的用户信息，即允许将系统权限SYSOPER／SYSDBA授予除INTERNAL／SYS以外的其他用户。
SHARED：指示可有多个数据库实例可以使用此密码文件。在此设置下只有INTERNAL／SYS帐号能被密码文件识别，即使文件中存有其他用户的信息，也不允许他们以SYSOPER／SYSDBA的权限登录。此设置为缺省值。
在REMOTE_LOGIN_PASSWORDFILE参数设置为EXCLUSIVE、SHARED情况下，Oracle系统搜索密码文件的次序为：在系统注册库中查找ORA_SID_PWFILE参数值（它为密码文件的全路径名）；若未找到，则查找ORA_PWFILE参数值；若仍未找到，则使用缺省值ORACLE_HOME＼DATABASE＼PWDSID.ORA；其中的SID代表相应的Oracle数据库系统标识符。
三、向密码文件中增加、删除用户：
当初始化参数REMOTE_LOGIN_PASSWORDFILE设置为EXCLUSIVE时，系统允许除INTERNAL／SYS以外的其他用户以管理员身份从远端或本机登录到Oracle数据库系统，执行数据库管理工作；这些用户名必须存在于密码文件中，系统才能识别他们。由于不管是在创建数据库实例时自动创建的密码文件，还是使用工具ORAPWD.EXE手工创建的密码文件，都只包含INTERNAL／SYS用户的信息；为此，在实际操作中，可能需要向密码文件添加或删除其他用户帐号。
由于仅被授予SYSOPER／SYSDBA系统权限的用户才存在于密码文件中，所以当向某一用户授予或收回SYSOPER／SYSDBA系统权限时，他们的帐号也将相应地被加入到密码文件或从密码文件中删除。由此，向密码文件中增加或删除某一用户，实际上也就是对某一用户授予或收回SYSOPER／SYSDBA系统权限。
要进行此项授权操作，需使用SYSDBA权限（或INTERNAL帐号）连入数据库，且初始化参数REMOTE_LOGIN_PASSWORDFILE的设置必须为EXCLUSIVE。具体操作步骤如下：
创建相应的密码文件；
设置初始化参数REMOTE_LOGIN_PASSWORDFILE＝EXCLUSIVE；
使用SYSDBA权限登录：CONNECTSYS／internal_user_passswordASSYSDBA；
启动数据库实例并打开数据库；
创建相应用户帐号，对其授权（包括SYSOPER和SYSDBA）：授予权限：GRANTSYSDBATOuser_name；
收回权限：REVOKESYSDBAFROMuser_name；
现在这些用户可以以管理员身份登录数据库系统了；
四、使用密码文件登录：
有了密码文件后，用户就可以使用密码文件以SYSOPER／SYSDBA权限登录Oracle数据库实例了，注意初始化参数REMOTE_LOGIN_PASSWORDFILE应设置为EXCLUSIVE或SHARED。任何用户以SYSOPER／SYSDBA的权限登录后，将位于SYS用户的Schema之下，以下为两个登录的例子：
1.以管理员身份登录：
假设用户scott已被授予SYSDBA权限，则他可以使用以下命令登录：
CONNECTscott／tigerASSYSDBA
2.以INTERNAL身份登录：
CONNECTINTERNAL／INTERNAL_PASSWORD
五、密码文件的维护：
1.查看密码文件中的成员：
可以通过查询视图V$PWFILE_USERS来获取拥有SYSOPER／SYSDBA系统权限的用户的信息，表中SYSOPER／SYSDBA列的取值TRUE／FALSE表示此用户是否拥有相应的权限。这些用户也就是相应地存在于密码文件中的成员。
2.扩展密码文件的用户数量：
当向密码文件添加的帐号数目超过创建密码文件时所定的限制（即ORAPWD.EXE工具的MAX_USERS参数）时，为扩展密码文件的用户数限制，需重建密码文件，具体步骤如下：
a)查询视图V$PWFILE_USERS，记录下拥有SYSOPER／SYSDBA系统权限的用户信息；
b)关闭数据库；
c)删除密码文件；
d)用ORAPWD.EXE新建一密码文件；
e)将步骤a中获取的用户添加到密码文件中。
3.修改密码文件的状态：
密码文件的状态信息存放于此文件中，当它被创建时，它的缺省状态为SHARED。可以通过改变初始化参数REMOTE_LOGIN_PASSWORDFILE的设置改变密码文件的状态。当启动数据库事例时，Oracle系统从初始化参数文件中读取REMOTE_LOGIN_PASSWORDFILE参数的设置；当加载数据库时，系统将此参数与口令文件的状态进行比较，如果不同，则更新密码文件的状态。若计划允许从多台客户机上启动数据库实例，由于各客户机上必须有初始化参数文件，所以应确保各客户机上的初始化参数文件的一致性，以避免意外地改变了密码文件的状态，造成数据库登陆的失败。
4.修改密码文件的存储位置：
密码文件的存放位置可以根据需要进行移动，但作此修改后，应相应修改系统注册库有关指向密码文件存放位置的参数或环境变量的设置。
5.删除密码文件：
在删除密码文件前,应确保当前运行的各数据库实例的初始化参数REMOTE_LOGIN_PASSWORDFILE皆设置为NONE。在删除密码文件后，若想要以管理员身份连入数据库的话，则必须使用操作系统验证的方法进行登录。
GoogleWave将问世
Google在旧金山举行的年度开发人员会议上发布了有关Wave的讯息。据了解，该公司指出他们有一个小工程师团队已经执行Wave计画有一两年了。Google现在要将Wave开放给开发人员，并且提供“开发工具”与“应用软件”来和它互动(它基本上是开放源码)。而一般大众得等到今年年底，才有机会享受到这项应用系统。
较早的报导将Wave描绘成一套通讯与协同合作的工具，但是它的设计本身透露出将会包含更多的功能。它结合了我们在过去一两年在网路上所见到的许多趋势，成为一个单一的应用。
从社交网站的兴起，我们可以看到串流、即时、internet应用软体开始流行的趋势;对一般大众而言，Wave代表了Google对这个趋势所做的回应。应用“串流”最好的例子，就是某个Twitter主页或是Facebook上的信息顺着页面往下流动，使用者不仅可以随意一一浏览，也可以针对某一条信息发表意见，和朋友分享，或是不理会它，让它顺着页面往下洗。
Wave似乎要以电子邮件和讯息做为拥抱这种串流介面的开端。Wave主页在页面上包含了短信(如Twitter)、大型使用者群组沟通(如Facebook)以及基本的协同合作工具，来对内容进行动作(如即时通讯与电子邮件)。
使用者所分享的资讯可以是静态的，例如电子邮件信息，以及对该邮件的讨论，也可以是动态的，如活动邀请-可以包含一份可能参加那个活动的朋友的名单，以及该活动地点所在的Google地图。如果你是后来才被邀请加入某个Wave讨论串，你可以点击“回覆”，接着就可以赶上你之前所没看到的讨论对话了-就像是对网页内容做Tivo数位录影一样。长远而言，Google打算让Wave能够和其他的网站互动。
Wave不会要求你的朋友对某个特定的网路服务保持忠诚度;它的设计旨在结合来自Internet各处的内容。因为Wave将会有其自己的文字编辑器，并且能让你轻松容易地上传多媒体内容，所以有人猜想它会不会吞食掉一些核心网路服务(甚至是一些Google自己的网路服务，如Google文件或Picasa等)。不过现在要判断它是不是会先进到能使人们把那些应用软体甩掉，或甚至只是产生威胁，还言之过早。
既然Wave是开放程序其他有名的网路应用(如Twitter)，也可以很容易地成为Wave体验的一部分。
最后，Wave最大的资产，可能是这些资讯能够和Google的核心商品─“搜索”结合，而Facebook之类的社交网路服务可以让使用者分享信息，而在这些网路服务里找出些可能的应用，则会激发出更多其他的可能。
GoogleWave如何帮助我们工作?
对企业用户而言，各公司正迫切需要着某种像Wave般的技术，以帮助其员工更为流畅地协同工作。无奈大部分的企业仍因为其现有的技术架构，还要好几年的转换时间，才有可能切换到这类的资讯流动模式。
想要企业以及为企业所设计的软体赶上串流应用的革新，还得要花上一段好长的时间。今天员工们还是得在一堆“回覆所有人”的信件中，摸索着做群组分享讨论。
使用如Wave之类的技术，使用者能够用一种更炫的方式，选择他们所想要一起分享内容的群组或个人。而因为分享的内容是置放在网路上的，他们也能够即时更新。
如socialtext之类的新型企业技术供应商，已经将其借网路同工的应用，设计成可以使用像串流之类格式的资料，让使用者能够编辑wiki和分享Twitter的短讯。有些公司已经采用了这样的技术，不过要让多数的公司企业拥抱这样的模式，可能还要再等上个好几年。
Google应该会也多半会试着将Wave整合到Google应用服务中。Google应用服务是Google的商用软体，包括Gmail、日历、文件、试算表与即时通讯…等项目。如果他们能够让使用者利用Wave和商业内容互动的话，便能更增加这项产品在企业技术买家眼中的价值。
数据中心绿色布线方案之美国泛达PANDUIT
由于预算限制和逐步升高的能源成本，数据中心的管理者被迫考虑所有可行的散热方案，以提高运行效率和维持业务连续性。基于统一物理层基础设施(UPI)的冷却解决方案，作为应对高热负载可靠、经济和环保的选择，在数据中心中不断得到应用。
美国泛达对数据中心空间的专业知识和确定客户要求的咨询式方法，可以提供优化数据中心散热效率的物理层基础设施解决方案。美国泛达基于UPI的数据中心解决方案包括散热管理系统、高速数据传输(HSDT)系统、机柜系统和物理层基础设施管理软件。该独特解决方案使得企业可以自信地实现更广泛的业务目标。
2009年，美国泛达发布了包括PanviewIQ物理层智能管理系统、架空地板密封套件、物理连接安全组件、GridRunner网格式桥架走线系统等全新产品系列，并提出了建设集灵活性、安全性、可用性为一体的数据中心解决方案。
新方案的独到之处在于整体考虑了数据中心的设计和效率，可以较好地平衡能耗、散热及合理设计布线基础设施，确保数据中心的可靠性、互操作性和可扩展性。这种整体方法造就了统一的物理层基础设施，使之全面覆盖能源、控制、计算、通信和安全系统。
1.科学的冷热循环
保证数据中心机房拥有科学的冷热对流，合理地利用冷空气，将暖空气正确地排出，可以大量节省数据中心制冷带来的能源消耗。
美国泛达提供了CoolBoot架空地板开孔封堵装置，专为封堵架空地板上的出线孔而设计。系统可以避免架空地板下的冷风通过出线孔散出，确保冷风能够更多地被网络设备吸收和利用，同时数据中心内冷热通道的完整性得到保持和提升。
2.合理规划架空地板下的数据和电源线缆
在机房内，经常因为地板下方空间内线缆的随意摆放、堆积而影响冷空气的正常流动。同时，合理的综合接地设计可以保护设备的物理安全。
美国泛达GridRunner网格式走线系统主要用于管理、支持和规划数据中心内架空地板下的数据线缆和电源线缆，避免地板下方空间由于线缆的随意摆放、堆积而影响冷空气的正常流动。
GridRunner系统采用金属材料制造，坚固耐用，配合架空地板支架固定件，可以简单快速地将其部署于架空地板下方。综合接地系统设计无需为系统安装额外的接地系统，节省了时间和经费。针对不同的路径线缆数量，GridRunner可提供四种规格尺寸。除此之外，GridRunner还为线缆提供了充足的弯曲半径保护，维护了线缆的传输性能，保证信息传输的完整性。
架空布线可以通过在所有的机架与机柜上部加上一个爬梯来实现。安装于爬梯上的线缆固定件为永久性的水平布线系统提供了一个清晰、可管理的路径。模块化光纤路由系统安装在爬梯下方，这不仅为机架与机柜之间的光纤布线提供了一个专用路径，也可以为任何介质类型的临时布线系统提供路径。高密度的机架与线缆管理系统被用于主要的配线区域，该区域安装角型24口配线架以在尽可能小的面积里容纳最大数量的连接点，同时也可以在同一个架体内容纳核心交换设备和跳插线系统。
3.保证系统数据安全
如何帮助IT人员提高系统的安全性，防止意外事件的发生，目前也得到了布线系统厂商的高度关注。
在美国泛达提出的物理安全解决方案中，包括了警示标签标识、安全锁、RJ45插座塞以及RJ45跳线锁定装置等。RJ45插座塞可用于所有RJ45插座，插入时不接触信息插座内的金针。系统用于阻塞未使用的端口，防止未经授权的接入，也可用于临时的端口标识。插座塞安装和移除不影响相邻端口。插座塞的移除需要使用专用工具，这样可提高整个网络的安全性。RJ45跳线锁定装置用于锁定于配线架、网络设备、IP电话或IP摄像机相连的RJ45跳线。它带有独特的锁定和解锁工具，防止人员未经授权或误操作将关键跳线拆除。
实时控制物理层的设备是当今数据中心不可或缺的功能。PViQ智能物理层管理系统是美国泛达现有PanView系统的升级。PViQ可以全天候实时监测配线架端口的连接信息。结合图形化界面，PViQ可以帮助IT人员准确了解物理网络的连接构成，生成系统文档。此外，对于未经授权和意外的系统连接或中断，系统可自动生成提示和报警，并及时反馈给网管人员。另外，系统支持工作任务的创建和分配，指导现场维护人员进行无差错的操作。PViQ的软件采用Java语言编写，运行MySQL数据库，可在WindowsXP环境下运行。整个系统兼容性更好、费用更低。
美国泛达是网络布线行业率先在全球范围内推广客户体验中心的公司，并一直采取先培育市场、再推广品牌的战略，可见美国泛达非常重视对市场的培育和与用户的互动。在中国，美国泛达不仅已于2006年在上海成立了客户体验中心，并且计划将这套经验移植到北京、广州、成都，配合原有的销售办事处。同时，在中国，美国泛达建立了领先的联盟阵容(比如与思科、APC等公司的合作)，为用户提供一体化基础设施方案。
菜鸟到高手——多年总结的电脑使用小技巧
一、WinXP下磁盘格式转换高招
安装的WinXP在使用过程中系统很不稳定，经常死机，动不动就蓝屏。经过判断，问题可能出现在磁盘格式上。打开电脑C盘的属性一看，磁盘格式为FAT16(稳定才怪呢)。
重要的得把磁盘格式转换过来呢，这里就出现麻烦了。属性里的格式化肯定是不行了，C盘是系统盘，里面的东西可动不得；格式化重装又未免有点小题大做了；于是就用大名鼎鼎的PQMagic。重启进入PQMagic后却发现“FAT-FAT32、FAT-NTFS”皆为不可选！
碰见这样的情况怎么解决呢？其实从Windows2000开始，系统中便自带了“用控制台命令CONVERT”来帮你进行磁盘属性的转换！只需要在运行里输入“CMD”进入控制台，输入convert/?，回车后就会看到对此命令的简单介绍，稍有经验的用户都能轻松掌握。
遇见这种情况，我们可以输入convertc:/fs:ntfs回车，系统会提示在当前状态下无法完成，这时要重新启动。输入“Y”，然后WinXP会自动关机，在重启两次以后，再看C盘的属性，已经是NTFS了！整个过程还不到4分钟(转换过程需要的时间与硬盘大小和计算机配置有关)！
二、在WinXP中阻止访问
作为一名单位的电脑用户，你不希望同事动用你的电脑，或者说某一个驱动器上的文件不希望同事看到，那么下面就介绍两种在WinXP中阻止访问或隐藏指定的驱动器的方法，或许对你有用。
1.利用WinXP“组策略”阻止访问指定的驱动器
单击“开始→运行”，在弹出的“运行”对话框中输入“gpedit.msc”即可打开“组策略”。在窗口的左边依次打开“用户配置→管理模板→Windows组件→Windows资源管理器”，在右边的窗口中会出现“防止从‘我的电脑’访问驱动器”的设置项。在该设置项上双击鼠标，在弹出的“防止从‘我的电脑’访问驱动器属性”对话框中选“已启用”复选项，在下面的“选择下列组合中的一个”后面的下拉列表中选择一个驱动器或几个驱动器。单击“确定”即可。这样其他用户就无法查看“我的电脑”或“资源管理器”中你所要阻止访问的驱动器的内容。这些被阻止访问的驱动器的图标仍旧会出现在“我的电脑”或“资源管理器”中，但是如果用户双击图标或在“运行”对话框中输入被阻止访问的驱动器的盘符并单击“确定”时会弹出一个对话框提示“本次操作由于这台计算机的限制而被取消。请与你的系统管理员联系”从而阻止这一操作进行。
提示：如果允许访问所有的驱动器目录，请将上面的这项设置设为“已禁用”或“未配置”或从下拉列表中选择“不限制驱动器”选项。
这项策略被启用后，用户仍可以通过使用其他的方式来继续访问这些被阻止访问的驱动器的内容。例如在命令提示符窗口中输入C:(假设C盘被配置为阻止访问)，然后回车，再输入dir/p/w(/p表示按页显示，/w表示每行显示五个文件或文件夹)，就可对C盘进行浏览。另外这项策略不会阻止用户使用其他的程序来访问这些被阻止访问的驱动器或其内容，例如：WinXP自带的“磁盘清理”和“磁盘碎片整理程序”等。并且也不会阻止用户使用“磁盘管理”(控制面板→管理工具→计算机管理快捷方式，打开计算机管理，再选存储→磁盘管理)来查看并更改这些被阻止访问的驱动器的特性。
三、WinRAR使用技巧二则
1.让加密文件更安全
为了保护个人的隐私和重要数据，WinRAR提供了加密的功能。但随着CPU频率的迅速提升，破解压缩包的密码也变得越来越容易，只要机器够快和肯多花些时间，从理论上说任何密码都有可能被攻破。因此，为了加大破解者破解的难度，最好能把要加密文件的文件名也列入加密范围。方法如下：首先在WinRAR的主界面点击“添加”按钮，建立一个新的压缩包，然后在弹出的窗口上，选择“文件”选项卡，并选定要添加到压缩包的文件；接下来转换到“高级”选项卡上，单击“设置密码…”按钮，输入密码，并选中“加密文件名”一项，最后点击“确定”即可。
2.避免反复输入密码
当我们用WinRAR打开一个加密的ZIP压缩包，并执行里面的文件时，会发现它与WinZip不同。WinZip只在打开第一个文件的时候要求输入密码，只要一次通过了密码验证，以后就可以直接查看压缩包里面的其他文件；WinRAR却不是这样，每一次执行ZIP压缩包里的程序时，它都要询问密码，当文件较多时，让人觉得很麻烦。
其实，WinRAR也提供了类似WinZip这样的功能，使用起来也很方便，只要在打开加密的压缩包以后，用鼠标点击“文件”菜单里的“密码”项，并且输入正确的密码，就可以解决问题了。
四、管理好系统自启动的程序
很多应用程序的作者，总是喜欢将程序设计成安装后随系统启动而自动启动。如果用户习惯了这类应用程序的“一路回车”默认安装法而不进行设置的话，则将导致系统中自动启动的应用程序越来越多，不但会造成启动的过程变长，而且造成系统资源极大的浪费。
为了系统的高效运行，一般而言，我们只随系统启动基本程序，而那些不是每次开机都使用的应用程序，我们一般要禁止它们自动启动，当要使用时再手工启动。下面我们谈谈在Windows98中如何管理自启动程序。首先我们来看看自启动程序的加载方式
1.通过系统配置文件和自动批处理文件加载
CONFIG.SYS(系统配置文件)和AUTOEXEC.BAT(自动批处理文件)是系统启动时最先运行的两个文件，也是我们认识得最早的两个文件。如果你是从DOS时代过来的人，对这两个文件不可能不熟悉！用任何文字编辑软件(比如记事本)就可以打开这两个文件进行编辑。不过，在目前的图形化操作系统中，通过这两个文件加载自启动程序的已经不多见了。
2.通过初始化文件加载
Windows在操作系统的安装目录下有两个重要的初始化文件：Win.ini和System.ini。在Windows启动过程中，可以通过这两个文件加载自启动程序，在Win.ini文件[windows]字段中有两个启动命令：“load=”和“run=”。一般情况下它们的后面没有内容，如果你用文本编辑器(比如记事本)打开后看到了比如“run=c:\windows\xxx.exe”或者“load=c:\windows\xxx.exe”，这里的xxx.exe就是自启动程序了。在System.ini的[boot]字段下有“Shell=Explorer.exe”，有些恶意程序或木马程序就是通过修改此处加载的，比如修改成“shell=Explorer.exexxx.exe(xxx是具体运行程序的主文件名，文件名还可以是其他类型的可执行文件)。
3.通过“启动”菜单或“Startup”菜单
最直接也最简单的一种加载自启动程序的方法，就是将应用程序的快捷方式添加到“开始→程序→启动”(或许还有“Startup”)中，当系统启动时，“启动”组中的程序就会自动启动。
另外，Winstar.bat也是一个能被Windows9X系统自动运行的文件，它可以人为创建。如果你要查找自启动程序，请不要忽略了该文件是否存在以及它的具体内容。
4.通过系统注册表加载
利用注册表加载自启动程序是目前应用程序最常采用的方法。一般说来，在注册表中加载应用程序的最常见的两个分支是：HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run和HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run。
应用程序在安装时，通过修改注册表的上述两个分支的内容，即可让程序自动启动。目前的防火墙程序、实时病毒监控程序等均是采用该方法加载的。
下面我们讲讲怎样将应用程序设置为自动启动和怎样禁止不必要的启动程序。
1.将应用程序设置为自动启动
简单的方法就是在“开始→程序→启动”群组中添加一个快捷方式（启动这个应用程序的快捷方式）。具体方法如下：
右击该应用程序的可执行文件，选择“创建快捷方式”，然后在创建的快捷方式中点右键，选“复制”，接着打开“开始→程序→启动”，将创建的快捷方式复制到“启动”组中即可。
当然也可以通过注册表加载。假如我们的目的是将C:\NETANTS\NETANTS.EXE（网络蚂蚁）做成自启动程序。方法是编辑一个注册表文件，方法如下：
首先进入注册表编辑器（用Regedit命令），然后找到并打开HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run分支，在右侧框的空白处单击右键，出现“新建”，选择“字串值”；然后将其名称由“新值#1”改为“NetAnts”；接着选中该名称，单击右键，选“修改”（也可双击左键），在编辑字符串窗口的“数值数据”中输入“C:\NETANTS\NETANTS.EXE”，然后按“确定”，再退出注册表编辑程序即可。
2.禁止不必要的自启动程序
所有已经启动的应用程序都要占用系统资源，所以启动那些并不使用的应用程序就是一种资源的浪费。特别是对于配置较低的计算机，节省系统资源能够提高整个系统的稳定性。为此，我们有必要对自动启动的应用程序进行控制。方法如下：
在“开始→运行”中键入“Msconfig”，点击“确定”按钮，出现系统配置实用程序，选启动标签，在不需要启动的项目前取消对钩。最好的方法是点击全部禁用，这样你的系统运行速度将会快很多。
五、杀毒环境有讲究
病毒是这些年遇到的最多的问题，很多玩家认为杀毒要借助杀毒软件，但不是说一点“杀毒”按钮就万事大吉了。针对不同特性的病毒，我们应该选择相应的系统环境，否则杀毒软件就是“草包”。（虽然如此，但本人一直以来认为杀毒软件就是懵人的东东。）
1、非系统文件病毒
杀这种病毒相对容易，一般在Windows环境下就能被“全歼”。
2、已激活的非系统文件病毒
虽然现在的反病毒软件都声称能查杀内存病毒，但此技术还未臻完善，效果可能达不到预期。因此，推荐杀此类病毒应在安全模式下进行。在Windows安全模式下，这些病毒不会在启动时被激活。
3、系统文件病毒
杀此类病毒一定要在干净的DOS环境下进行，甚至还需要动用几种杀毒软件交叉、反复查杀才能彻底清除。
4、网络病毒
此类病毒现在层出不穷，很容易反复感染，因此不但需要干净的杀毒环境，还必须在断开网络的情况下进行查杀。
你可能不知道的Photoshop技巧50条
1.快速打开文件
双击Photoshop的背景空白处(默认为灰色显示区域)即可打开选择文件的浏览窗口。
2.随意更换画布颜色
选择油漆桶工具并按住Shift点击画布边缘，即可设置画布底色为当前选择的前景色。如果要还原到默认的颜色，设置前景色为25%灰度(R192，G192，B192)再次按住Shift点击画布边缘。
3.选择工具的快捷键
可以通过按快捷键来快速选择工具箱中的某一工具，各个工具的字母快捷键如下：
选框-M移动-V套索-L魔棒-W
喷枪-J画笔-B铅笔-N橡皮图章-S
历史记录画笔-Y橡皮擦-E模糊-R减淡-O
钢笔-P文字-T度量-U渐变-G
油漆桶-K吸管-I抓手-H缩放-Z
默认前景和背景色-D切换前景和背景色-X
编辑模式切换-Q显示模式切换-F
另外，如果我们按住Alt键后再单击显示的工具图标，或者按住Shift键并重复按字母快捷键则可以循环选择隐藏的工具。
4.获得精确光标
按CapsLock键可以使画笔和磁性工具的光标显示为精确十字线，再按一次可恢复原状。
5.显示/隐藏控制板
按Tab键可切换显示或隐藏所有的控制板(包括工具箱)，如果按X则工具箱不受影响，只显示或隐藏其他的控制板。
6.快速恢复默认值
有些不擅长Photoshop的朋友为了调整出满意的效果真是几经周折，结果发现还是原来的默认效果最好，这下傻了眼，后悔不该当初呀！怎么恢复到默认值呀？试着轻轻点按选项栏上的工具图标，然后从上下文菜单中选取“复位工具”或者“复位所有工具”。
7.自由控制大小
缩放工具的快捷键为“Z”，此外“Ctrl＋空格键”为放大工具，“Alt＋空格键”为缩小工具，但是要配合鼠标点击才可以缩放；相同按X“+”键以及“－”键分别也可为放大和缩小图像；X“+”和X“－”可以自动调整窗口以满屏缩放显示，使用此工具你就可以无论图片以多少百分比来显示的情况下都能全屏浏览！如果想要在使用缩放工具时按图片的大小自动调整窗口，可以在缩放工具的属性条中点击“满画布显示”选项。
8.使用非HandTool(手形工具)时，按住空格键后可转换成手形工具，即可移动视窗内图像的可见范围。在手形工具上双击鼠标可以使图像以最适合的窗口大小显示，在缩放工具上双击鼠标可使图像以1:1的比例显示。
9.在使用EraseTool(橡皮擦工具)时，按住Alt键即可将橡皮擦功能切换成恢复到指定的步骤记录状态。
10.使用SmudgeTool(指尖工具)时，按住Alt键可由纯粹涂抹变成用前景色涂抹。
11.要移动使用TypeMaskTool(文字蒙版工具)打出的字形选取范围时，可先切换成快速蒙版模式（用快捷键Q切换），然后再进行移动，完成后只要再切换回标准模式即可。
12.按住Alt键后，使用RubberStampTool(橡皮图章工具)在任意打开的图像视窗内单击鼠标，即可在该视窗内设定取样位置，但不会改变作用视窗。
13.在使用MoveTool(移动工具)时，可按键盘上的方向键直接以1pixel的距离移动图层上的图像，如果先按住Shift键后再按方向键则以每次10pixel的距离移动图像。而按Alt键拖动选区将会移动选区的拷贝。
14.使用磁性套索工具或磁性钢笔工具时，按“[”或“]”键可以实时增加或减少采样宽度(选项调板中)。
15.度量工具在测量距离上十分便利(特别是在斜线上)，你同样可以用它来量角度(就像一只量角器)。在信息面板可视的前提下，选择度量工具点击并拖出一条直线，按住Alt键从第一条线的节点上再拖出第二条直线，这样两条线间的夹角和线的长度都显示在信息面板上。用测量工具拖动可以移动测量线(也可以只单独移动测量线的一个节点)，把测量线拖到画布以外就可以把它删除。
16.使用绘画工具(如画笔，橡皮等)，按住Shift键单击鼠标，可将两次单击点以直线连接。
17.按住Alt键用吸管工具选取颜色即可定义当前背景色。通过结合颜色取样器工具(X)和信息面板监视当前图片的颜色变化。变化前后的颜色值显示在信息面板上其取样点编号的旁边。通过信息面板上的弹出菜单可以定义取样点的色彩模式。要增加新取样点只需在画布上用颜色取样器工具随便什么地方再点一下，按住Alt键点击可以除去取样点。但一张图上最多只能放置四个颜色取样点。当Photoshop中有对话框(例如：色阶命令、曲线命令等等)弹出时，要增加新的取样点必须按住Shift键再点击，按住X点击可以减去一个取样点。
18.裁切工具大家都一定用过，这种情况你也一定遇到过；在你调整裁切框、而裁切框又比较接近图像边界的时候，裁切框会自动地贴到图像的边上，令你无法精确的裁切图像。不过只要在调整裁切边框的时候按下“Ctrl”键，那么裁切框就会服服帖帖，让你精确裁切。
复制技巧
19.按住X键拖动鼠标可以复制当前层或选区内容。
20.如果你最近拷贝了一张图片存在剪贴板里，Photoshop在新建文件(X)的时候会以剪贴板中图片的尺寸作为新建图的默认大小。要略过这个特性而使用上一次的设置，在打开的时候按住Alt键(X)。
21.如果创作一幅新作品，需要与一幅已打开的图片有一样的尺寸、解析度、格式的文件。选取“文件”→“New”，点Photoshop菜单栏的Windows选项，在弹出菜单的最下面一栏点击已开启的图片名称，是的，就是这么简单!
22.在使用自由变换工具(X)时按住Alt键(X)即可先复制原图层(在当前的选区)后在复制层上进行变换；X为再次执行上次的变换，X为复制原图后再执行变换。
23.使用“通过复制新建层(X)”或“通过剪切新建层(X)”命令可以在一步之间完成拷贝到粘贴和剪切到粘贴的工作；通过复制(剪切)新建层命令粘贴时仍会放在它们原来的地方，然而通过拷贝(剪切)再粘贴，就会贴到图片(或选区)的中心。
24.若要直接复制图像而不希望出现命名对话框，可先按住Alt键，再执行“图像”→“副本”命令。
25.Photoshop的剪贴板很好用，但你更希望直接使用Windows系统剪贴板，直接处理从屏幕上截取的图像。好的，按下X，在弹出的面板上将“输出到剪贴板”点中吧！
26.在Photoshop内实现有规律复制
在做版面设计的时候我们会经常把某些元素有规律地摆放以寻求一种形式的美感，在Photoshop内通过四个快捷键的组合就可以轻易得出。
(1)圈选出你要复制的物体；
(2)按X产生一个浮动Layer；
(3)按旋转并移动到适当位置后确认；
(4)现在可以按住X后连续按“T”就可以有规律地复制出连续的物体。(只按住X则只是有规律移动)
27.当我们要复制文件中的选择对象时，要使用编辑菜单中的复制命令。复制一次你也许觉不出麻烦，但要多次复制，一次一次的点击就相当不便了。这时你可以先用选择工具选定对象，而后点击移动工具，再按住“Alt”键不放。当光标变成一黑一白重叠在一起的两个箭头时，拖动鼠标到所需位置即可。若要多次复制，只要重复的放松鼠标就行了。
28.可以用选框工具或套索工具，把选区从一个文档拖到另一个上。
29.要为当前历史状态或快照建立一个复制文档可以：
(1)点击“从当前状态创建新文档”按钮；
(2)从历史面板菜单中选择新文档；
(3)拖动当前状态(或快照)到“从当前状态创建新文档”按钮上；
(4)右键点击所要的状态(或快照)从弹出菜单中选择新文档把历史状态中当前图片的某一历史状态拖到另一个图片的窗口可改变目的图片的内容。
按住Alt键点击任一历史状态(除了当前的、最近的状态)可以复制它。而后被复制的状态就变为当前(最近的)状态。按住Alt拖动动作中的步骤可以把它复制到另一个动作中。
选择技巧
30.把选择区域或层从一个文档拖向另一个时，按住Shift键可以使其在目的文档上居中。如果源文档和目的文档的大小(尺寸)相同，被拖动的元素会被放置在与源文档位置相同的地方(而不是放在画布的中心)。如果目的文档包含选区，所拖动的元素会被放置在选区的中心。
31.在动作调板中单击右上角的三角形按钮，从弹出的菜单中选择载入动作，进入PhotoshopGoodiesActions目录下，其下有按钮、规格、命令、图像效果，文字效果、纹理、帧六个动作集，包含了很多实用的东西哟!另外，在该目录下还有一个ACTIONS.PDF文件，可用AdobeAcrobat软件打开，里面详细介绍了这些动作的使用方法和产生的效果。
32.单击工具条中的画笔类工具，在随后显示的属性条中单击画笔标签右边的小三角，在弹出的菜单中再点击小箭头选择“载入画笔…”。到Photoshop目录的Brushes文件夹中选择X。原来这里还有这么多可爱的东西。
33.画出一个漂亮的标记，想在作品中重复使用？好办，用套索工具选好它，在Brushes的弹出菜单中选“储存画笔…”，然后用画笔工具选中这个新笔头……朋友，想做居室喷涂吗?
34.如果想选择两个选择区域之间的部分，在已有的任意一个选择区域的旁边同时按住Shift和Alt键进行拖动，画第二个选择区域(鼠标十字形旁出现一个乘号，表示重合的该区域将被保留)。
35.在选择区域中删除正方形或圆形，首先增加任意一个选择区域，然后在该选择区域内，按Alt键拖动矩形或椭圆的面罩工具。然后松开Alt键，按住Shift键，拖动到你满意为止。然后先松开鼠标按钮再松开Shift键。
36.从中心向外删除一个选择区域，在任意一个选择区域内，先按Alt键拖动矩形或椭圆的面罩工具，然后松开Alt键后再一次按住Alt键，最后松开鼠标按钮再松开Alt键。
37.在快速蒙版模式下要迅速切换蒙版区域或选取区域选项时，先按住Alt键后将光标移到快速遮色片模式图标上单击鼠标就可以了。
38.使用选框工具的时候，按住Shift键可以划出正方形和正圆的选区；按住Alt键将从起始点为中心勾划选区。
39.使用“重新选择”命令(X)来载入/恢复之前的选区。
40.在使用套索工具勾画选区的时候按Alt键可以在套索工具和多边形套索工具间切换。勾画选区的时候按住空格键可以移动正在勾画的选区。
41.按住Ctrl键点击层的图标(在层面板上)可载入它的透明通道，再按住X键点击另一层为选取两个层的透明通道相交的区域。
42.在缩放或复制图片之间先切换到快速蒙板模式[Q]可保留原来的选区。
43.“选择框”工具中Shift和Alt键的使用方法：
当用“选择框”选取图片时，想扩大选择区，这时按住Shift键，光标“+”会变成“十+”，拖动光标，这样就可以在原来选取的基础上扩大你所需的选择区域。或是在同一幅图片中同时选取两个或两个以上的选取框。
当用“选择框”选取图片时，想在“选择框”中减去多余的图片，这时按住“Alt”键，光标“+”会变成“十-”，拖动光标，这样就可以留下你所需要的图片。
当用“选择框”选取图片时，想得到两个选取框叠加的部分，这时按住“X”键，光标“+”会变成“十í”，拖动光标，这样就是你想要的部分。
想得到“选取框”中的正圆或正方形时，按住“Shift”键，就可以。
44.“套索”工具中Shift和Alt键的使用方法：
增加选取范围按“Shift”键。(方法和“选择框”中的1相同)
减少选取范围按“Alt”键。(方法和“选择框”中的2相同)
两个选取框叠加的区域按“X”键。(方法和“选择框”中的3相同)
45.“魔杖”工具中Shift和Alt键的使用方法：
增加选取范围按“Shift”键。(方法和“选择框”中的1相同)
减少选取范围按“Alt”键。(方法和“选择框”中的2相同)
两个选取框叠加的区域按“X”键。(方法和“选择框”中的3相同)
快捷键技巧
46.你可以用以下的快捷键来快速浏览你的图像：
Home卷动至图像的左上角；End卷动至图像的右下角；PageUP卷动至图像的上方；PageDown卷动至图像的下方；XUp卷动至图像的左方；XDown卷动至图像的右方。
47.按Ctrl键+Alt键+0键即可使图像按1:1比例显示。
48.当你想“紧排”(调整个别字母之间的空位)，首先在两个字母之间单击，然后按下Alt键后用左右方向键调整。
49.将对话框内的设定恢复为默认，先按住Alt键后，Cancel键会变成Reset键，再单击Reset键即可。
50.要快速改变在对话框中显示的数值，首先用鼠标点击那个数字，让光标处在对话框中，然后就可以用上下方向键来改变该数值了。如果在用方向键改变数值前先按下Shift键，那么数值的改变速度会加快。
木马的常见四大伪装欺骗行为
1、将木马包装为图像文件
首先，黑客最常使用骗别人执行木马的方法，就是将特洛伊木马说成图像文件，比如说是照片等，应该说这是一个最不合逻辑的方法，但却是最多人中招的方法，有效而又实用。
只要入侵者扮成美眉及更改服务器程序的文件名(例如sam.exe)为“类似”图像文件的名称，再假装传送照片给受害者，受害者就会立刻执行它。为什么说这是一个不合逻辑的方法呢？图像文件的扩展名根本就不可能是exe，而木马程序的扩展名基本上又必定是exe，明眼人一看就会知道有问题，多数人在接收时一看见是exe文件，便不会接收了，那有什么方法呢？其实方法很简单，他只要把文件名改变，例如把“sam.exe”更改为“sam.jpg”，那么在传送时，对方只会看见sam.jpg了，而到达对方电脑时，因为windows默认值是不显示扩展名的，所以很多人都不会注意到扩展名这个问题，而恰好你的计算机又是设定为隐藏扩展名的话，那么你看到的只是sam.jpg了，受骗也就在所难免了！
还有一个问题就是，木马本身是没有图标的，而在电脑中它会显示一个windows预设的图标，别人一看便会知道了！但入侵者还是有办法的，这就是给文件换个“马甲”，即用IconForge等图标文件修改文件图标，这样木马就被包装成jpg或其他图片格式的木马了，很多人会不经意间执行了它。
2、以Z-file伪装加密程序
Z-file伪装加密软件经过将文件压缩加密之后，再以bmp图像文件格式显示出来(扩展名是bmp，执行后是一幅普通的图像)。当初设计这个软件的本意只是用来加密数据，用以就算计算机被入侵或被非法使用时，也不容易泄漏你的机密数据所在。不过如果到了黑客手中，却可以变成一个入侵他人的帮凶。使用者会将木马程序和小游戏合并，再用Z-file加密及将此“混合体”发给受害者，由于看上去是图像文件，受害者往往都不以为然，打开后又只是一般的图片，最可怕的地方还在于就连杀毒软件也检测不出它内藏特洛伊木马和病毒。当打消了受害者警惕性后，再让他用WinZip解压缩及执行“伪装体(比方说还有一份小礼物要送给他)，这样就可以成功地安装了木马程序。如果入侵者有机会能使用受害者的电脑(比如上门维修电脑)，只要事先已经发出了“混合体”，则可以直接用Winzip对其进行解压及安装。由于上门维修是赤着手使用其电脑，受害者根本不会怀疑有什么植入他的计算机中，而且时间并不长，30秒时间已经足够。就算是“明晃晃”地在受害者面前操作，他也不见得会看出这一双黑手正在干什么。特别值得一提的是，由于“混合体”可以躲过反病毒程序的检测，如果其中内含的是一触即发的病毒，那么一经解开压缩，后果将是不堪设想。
3、合并程序欺骗
通常有经验的用户，是不会将图像文件和可执行文件混淆的，所以很多入侵者一不做二不休，干脆将木马程序说成是应用程序：反正都是以exe作为扩展名的。然后再变着花样欺骗受害者，例如说成是新出炉的游戏，无所不能的黑客程序等等，目地是让受害者立刻执行它。而木马程序执行后一般是没有任何反应的，于是在悄无声息中，很多受害者便以为是传送时文件损坏了而不再理会它。
如果有更小心的用户，上面的方法有可能会使他们产生怀疑，所以就衍生了一些合并程序。合并程序是可以将两个或以上的可执行文件(exe文件)结合为一个文件，以后一旦执行这个合并文件，两个可执行文件就会同时执行。如果入侵者将一个正常的可执行文件(一些小游戏如wrap.exe)和一个木马程序合并，由于执行合并文件时wrap.exe会正常执行，受害者在不知情中，背地里木马程序也同时执行了。而这其中最常用到的软件就是joiner，由于它具有更大的欺骗性，使得安装特洛伊木马的一举一动了无痕迹，是一件相当危险的黑客工具。
以往有不少可以把两个程序合并的软件为黑客所使用，但其中大多都已被各大防毒软件列作病毒了，而且它们有两个突出的问题存在，这问题就是：合并后的文件体积过大，只能合并两个执行文件。
正因为如此，黑客们纷纷弃之转而使用一个更简单而功能更强的软件，那就是Joiner，这个软件可以把图像文件、音频文件与可执行文件合并，还能减小合并后文件体积，而且可以待使用者执行后立即收到信息，告诉你对方已中招及对方的IP。大家应该提高警惕。
4、伪装成应用程序扩展组件
这一类属于最难识别的特洛伊木马。黑客们通常将木马程序写成任何类型的文件(例如dll、ocx等)然后挂在一个十分出名的软件中，让人不去怀疑安装文件的安全性，更不会有人检查它的文件是否多了。而当受害者打开软件时，这个有问题的文件即会同时执行。这种方式相比起用合并程序有一个更大的好处，那就是不用更改被入侵者的登录文件，以后每当其打开软件时木马程序都会同步运行。
当您遇到以上四种情况时请小心为妙，说不定无意之中您已经中招了！！
万兆交换机结构看最新以太网技术
万兆交换机的出现彻底实现了私有网络到大众网络的融合，并且其能够提供在一秒钟超过一千个G的吞吐量，这是传统的交换机所不能做到的。作为兼容于以往的最新以太网技术，万兆以太网不仅仅是以太网的“高速翻版”，万兆以太网第一次提出了万兆广域以太网技术，第一次实现了私有网络到公众网络的融合。
同样，作为网络的核心设备，万兆以太网交换机也不仅仅是在已有的千兆以太网交换机上支持万兆的接入模块，它需要新一代的系统设计，包括从交换机体系结构、二/三层技术的更新，到下一代IPv6的缺省支持和有效的带宽管理。
近年来，从局域网到城域网，从城域网到广域网，以太网技术以惊人的速度正占据着越来越多的市场，尤其在企业网络和运营商网络中，以太网技术越来越多地成为毫无争议的选择。从快速以太网到千兆以太网，再到万兆以太网，技术上的更新满足了新一代互联网技术所带来的高速带宽增长和新一代应用的需求。以下我们来看一下万兆以太网交换机中的新一代技术。
分布式的交换体系
用户投资购买万兆以太网交换机，是因为需要能够在任何情况下线速处理数据包的转发，需要能够处理新一代的互联网应用，如组播应用、流媒体应用、IP语音、下一代互联网IPv6应用;同时也需要交换机能够提供最好的投资保护、能够占用最少的机架空间、能够尽量地节省电量、能够看得见用户的流量等。
显然，千兆交换机不能容纳大容量万兆端口的线速转发，目前的千兆交换机只能够提供几十到几百个G的吞吐量，而新一代的万兆交换机能够提供每秒处理一千个G以上的吞吐。由于如此大的数据吞吐用最高的CPU也不能实现线速转发，所以我们需要专用的网络集成电路芯片(ASIC)，同时需要将数据转发的任务分布到各个模块上实现。分布式系统有不同的实现方式，一种是在传统的交换机技术上将常用的任务转移到本地模块上实现，它可以利用本地的交换矩阵，也可以利用整个交换机的交换矩阵，但是这样的做法显然不是最佳的;另一种做法是彻底地将所有数据转发的任务分布到各个模块并利用本地的大容量交换矩阵实现。所以说，大容量的分布式交换结构最为有效，万兆交换机不仅应该提供大容量的背板交换矩阵，还应该提供大容量的本地交换矩阵，无阻塞的并行交换矩阵是目前最为先进的技术。
ASIC与FPGA芯片
同时，ASIC提供的是在转发数据时利用专用芯片而不是由CPU来处理。ASIC的衡量标准就是尽可能在芯片级上处理所有的流量转发，但是问题在于ASIC一旦设计之后交换机就不能进行修改。所以我们会选择处理尽可能多的数据转发设计产品，我们会考虑到IPv4的数据包交换和路由、IP组播的数据包，是否能够实现芯片级的数据分流和服务质量保证(QoS)，是否能够实现芯片级的数据限速，数据限速是否可以实现多种方式以及采用信用制而非门票制的方式，是否可以实现策略路由，是否可以实现访问列表控制(ACL)，是否可以实现新一代IPv6的交换和路由，甚至是否可以芯片级采集数据流量等一系列问题。优秀的ASIC设计体现了交换机设计的最高技术。
但是，有了分布式的交换体系和优异的ASIC技术还远远不够，由于ASIC的技术一旦实现则不能更改，那么新的技术标准、新的应用模式将完全利用CPU来处理，而这样往往给用户带来性能上的损失和业务上的痛苦。解决的办法可以是购买新一代ASIC设计的模块，但是硬件升级可能带来的是昂贵的追加投资。最新的万兆交换机会利用现场可编程门阵列芯片(FPGA)来解决这一缺陷，将新的标准通过软件升级由硬件处理，提供了用户投资的最好保护。
解决冲突
这样一来，似乎所有的问题都解决了，其实不然。由于交换机的各个模块之间以及它们与中央管理模块之间是一个有机的整体，Internet路由信息的分发、维护需要各个模块的参与，并且总会存在这样的问题:由于本地硬件芯片寻址不到而需要中央管理模块的参与，所以交换机的性能会有所损失。
最新的万兆交换机是如何解决这一问题的?主要是通过两个途径：一是将控制通道和数据转发通道进行分离，二是在各个接口模块上使用高性能的CPU参与。控制通道和数据转发通道的分离就是在交换机上实现两个不同的并行交叉矩阵。这样，我们所说的背板容量将完全用于数据通道的使用，同时也保障了万兆交换机硬件的安全性，而本地高性能的CPU参与使得中央管理模块永远不会处理涉及各个接口数据的转发，实现真正意义上的分布式体系结构。当然，万兆以太网的体系结构还有很多因素参与，比如大容量的SDRAM和TCAM(能够在一秒钟实现10亿次以上搜索)，比如本地路由方式是否采用基于拓扑结构驱动。
更重要的是，万兆交换机的软件是否采用多线程方式，软件是否提供最新一代的二/三层技术标准。这些二/三层技术包含了新一代网络的最新需求，比如基于万兆以太网端口的链路捆绑，是否提供快速链路冗余的各种技术、是否提供从端口安全性到各种用户认证的安全技术、是否提供完整的IPv4和IPv6的各项规范、是否提供快速BGP路由技术、是否提供冗余路由协议、是否提供各项二/三层安全特性、是否提供交换机的防攻击特性、是否提供交换机本身CPU智能保护、是否所有这些特性都由硬件实现等。
完整的IPv6规范
IPv6提供了各种设备上网而非仅仅是PC和服务器，同时克服了目前IPv4的一些缺陷，万兆以太网加上IPv6的组合，是构建未来高性能新一代网络的必由之路。通常IPv6有三种实现方法:在目前的交换机上用软件方式实现;或者采用新的硬件模块，插入现有的系统之中，从而增强IPv4/IPv6的转发性能;或者是全新设计的IPv6万兆交换机。
安全与流量管理
安全性和网络流量管理是目前用户最为关注的重点。作为骨干设备，不仅仅需要考虑设备本身的安全防范，同时还要提供用户的防范，就是说既要本身免疫能力强，又要提供强有力的阻击手段来保护网络的用户，并且所有的防范都应该是基于硬件来实现。但是所有的安全防范都是基于我们已知的攻击手段和安全漏洞上，如果我们不能监控整个网络，安全性就不会是完整特性。
考虑到万兆交换和路由的高速转发，以往通过CPU采集流量的方法将不可行，而融入ASIC之中的分布式流量采集系统带来了万兆交换机的一个创新。sFlow是目前较为先进的流量管理规范，它既能提供IPv4的数据，也能提供IPv6的数据。如果我们能在不影响性能的前提下提供所有设备的所有流量，那么就可以非常容易地观察网络的流量，可以是某一个端口下一个特定用户的活动，也可以是当前网络上的异常流量。分布式的流量监控系统好比是黑夜里的道路监控系统，难以想象一台核心的骨干设备缺乏这样的流量管理系统将会出现什么样的后果。
测试
衡量一台万兆交换机，首先是测试它是否能够达到线速转发的吞吐量，同时观察端到端的传输延迟，一台优秀的万兆交换机应该能够在加载关键应用的前提下(如组播应用、IPv6应用、大容量访问列表控制)，线速无阻塞地转发数据包，并且保证端到端的数据延迟尽可能地小。其次，衡量万兆交换机还需通过测试关键协议，如BGP4的容量、路由收敛和路由震荡来检验，测试针对攻击的防范特性、测试流量管理的关键特性。冗余性的测试也非常重要，冗余性包含硬件系统的冗余性和软件特性的冗余性。可以说，选择万兆以太网交换机不仅仅是几个单项功能的选择，更是一项全面评估的系统选择。
鲜为人知的技巧Excel会计应学35招秘技
也许你已经在Excel中完成过上百张财务报表，也许你已利用Excel函数实现过上千次的复杂运算，也许你认为Excel也不过如此，甚至了无新意。但我们平日里无数次重复的得心应手的使用方法只不过是Excel全部技巧的百分之一。本专题从Excel中的一些鲜为人知的技巧入手，领略一下关于Excel的别样风情。
一、建立分类下拉列表填充项
我们常常要将企业的名称输入到表格中，为了保持名称的一致性，利用“数据有效性”功能建了一个分类下拉列表填充项。
1.在Sheet2中，将企业名称按类别(如“工业企业”、“商业企业”、“个体企业”等)分别输入不同列中，建立一个企业名称数据库。2.选中A列(“工业企业”名称所在列)，在“名称”栏内，输入“工业企业”字符后，按“回车”键进行确认。仿照上面的操作，将B、C……列分别命名为“商业企业”、“个体企业”……
3.切换到Sheet1中，选中需要输入“企业类别”的列(如C列)，执行“数据→有效性”命令，打开“数据有效性”对话框。在“设置”标签中，单击“允许”右侧的下拉按钮，选中“序列”选项，在下面的“来源”方框中，输入“工业企业”，“商业企业”，“个体企业”……序列(各元素之间用英文逗号隔开)，确定退出。再选中需要输入企业名称的列(如D列)，再打开“数据有效性”对话框，选中“序列”选项后，在“来源”方框中输入公式：=INDIRECT(C1)，确定退出。
4.选中C列任意单元格(如C4)，单击右侧下拉按钮，选择相应的“企业类别”填入单元格中。然后选中该单元格对应的D列单元格(如D4)，单击下拉按钮，即可从相应类别的企业名称列表中选择需要的企业名称填入该单元格中。
提示：在以后打印报表时，如果不需要打印“企业类别”列，可以选中该列，右击鼠标，选“隐藏”选项，将该列隐藏起来即可。
二、建立“常用文档”新菜单
在菜单栏上新建一个“常用文档”菜单，将常用的工作簿文档添加到其中，方便随时调用。
1.在工具栏空白处右击鼠标，选“自定义”选项，打开“自定义”对话框。在“命令”标签中，选中“类别”下的“新菜单”项，再将“命令”下面的“新菜单”拖到菜单栏。按“更改所选内容”按钮，在弹出菜单的“命名”框中输入一个名称(如“常用文档”)。
2.再在“类别”下面任选一项(如“插入”选项)，在右边“命令”下面任选一项(如“超链接”选项)，将它拖到新菜单(常用文档)中，并仿照上面的操作对它进行命名(如“工资表”等)，建立第一个工作簿文档列表名称。重复上面的操作，多添加几个文档列表名称。
3.选中“常用文档”菜单中某个菜单项(如“工资表”等)，右击鼠标，在弹出的快捷菜单中，选“分配超链接→打开”选项，打开“分配超链接”对话框。通过按“查找范围”右侧的下拉按钮，定位到相应的工作簿(如“工资.xls”等)文件夹，并选中该工作簿文档。重复上面的操作，将菜单项和与它对应的工作簿文档超链接起来。
4.以后需要打开“常用文档”菜单中的某个工作簿文档时，只要展开“常用文档”菜单，单击其中的相应选项即可。
提示：尽管我们将“超链接”选项拖到了“常用文档”菜单中，但并不影响“插入”菜单中“超链接”菜单项和“常用”工具栏上的“插入超链接”按钮的功能。
